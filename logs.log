2023-06-02 23:07:13,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 23:07:13,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 23:07:13,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 23:07:13,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 23:07:21,994:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 23:07:22,728:INFO:PyCaret ClassificationExperiment
2023-06-02 23:07:22,728:INFO:Logging name: clf-default-name
2023-06-02 23:07:22,728:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 23:07:22,728:INFO:version 3.0.2
2023-06-02 23:07:22,728:INFO:Initializing setup()
2023-06-02 23:07:22,728:INFO:self.USI: 572e
2023-06-02 23:07:22,729:INFO:self._variable_keys: {'fold_generator', '_available_plots', 'X_test', 'n_jobs_param', 'exp_name_log', 'data', 'target_param', 'pipeline', 'is_multiclass', 'gpu_n_jobs_param', 'y_train', 'exp_id', 'X', 'y', 'fold_groups_param', 'y_test', 'fold_shuffle_param', 'html_param', 'seed', 'USI', 'X_train', 'idx', '_ml_usecase', 'fix_imbalance', 'log_plots_param', 'logging_param', 'gpu_param', 'memory'}
2023-06-02 23:07:22,729:INFO:Checking environment
2023-06-02 23:07:22,729:INFO:python_version: 3.9.12
2023-06-02 23:07:22,729:INFO:python_build: ('main', 'Jun  1 2022 06:34:44')
2023-06-02 23:07:22,729:INFO:machine: arm64
2023-06-02 23:07:22,729:INFO:platform: macOS-13.2.1-arm64-arm-64bit
2023-06-02 23:07:22,729:INFO:Memory: svmem(total=17179869184, available=2853486592, percent=83.4, used=5381505024, free=15417344, active=2851323904, inactive=2812575744, wired=2530181120)
2023-06-02 23:07:22,729:INFO:Physical Core: 8
2023-06-02 23:07:22,729:INFO:Logical Core: 8
2023-06-02 23:07:22,729:INFO:Checking libraries
2023-06-02 23:07:22,730:INFO:System:
2023-06-02 23:07:22,730:INFO:    python: 3.9.12 (main, Jun  1 2022, 06:34:44)  [Clang 12.0.0 ]
2023-06-02 23:07:22,730:INFO:executable: /Users/pongsapak/opt/anaconda3/bin/python
2023-06-02 23:07:22,730:INFO:   machine: macOS-13.2.1-arm64-arm-64bit
2023-06-02 23:07:22,730:INFO:PyCaret required dependencies:
2023-06-02 23:07:22,730:INFO:                 pip: 23.1.2
2023-06-02 23:07:22,730:INFO:          setuptools: 61.2.0
2023-06-02 23:07:22,730:INFO:             pycaret: 3.0.2
2023-06-02 23:07:22,730:INFO:             IPython: 8.8.0
2023-06-02 23:07:22,730:INFO:          ipywidgets: 8.0.4
2023-06-02 23:07:22,730:INFO:                tqdm: 4.64.1
2023-06-02 23:07:22,730:INFO:               numpy: 1.22.4
2023-06-02 23:07:22,730:INFO:              pandas: 1.5.2
2023-06-02 23:07:22,730:INFO:              jinja2: 3.1.2
2023-06-02 23:07:22,730:INFO:               scipy: 1.9.3
2023-06-02 23:07:22,731:INFO:              joblib: 1.2.0
2023-06-02 23:07:22,731:INFO:             sklearn: 1.2.0
2023-06-02 23:07:22,731:INFO:                pyod: 1.0.9
2023-06-02 23:07:22,731:INFO:            imblearn: 0.10.1
2023-06-02 23:07:22,731:INFO:   category_encoders: 2.6.1
2023-06-02 23:07:22,731:INFO:            lightgbm: 3.2.1
2023-06-02 23:07:22,731:INFO:               numba: 0.56.4
2023-06-02 23:07:22,731:INFO:            requests: 2.28.2
2023-06-02 23:07:22,731:INFO:          matplotlib: 3.5.1
2023-06-02 23:07:22,731:INFO:          scikitplot: 0.3.7
2023-06-02 23:07:22,731:INFO:         yellowbrick: 1.5
2023-06-02 23:07:22,731:INFO:              plotly: 5.12.0
2023-06-02 23:07:22,731:INFO:             kaleido: 0.2.1
2023-06-02 23:07:22,731:INFO:         statsmodels: 0.13.5
2023-06-02 23:07:22,731:INFO:              sktime: 0.17.0
2023-06-02 23:07:22,731:INFO:               tbats: 1.1.3
2023-06-02 23:07:22,731:INFO:            pmdarima: 2.0.3
2023-06-02 23:07:22,731:INFO:              psutil: 5.9.4
2023-06-02 23:07:22,731:INFO:PyCaret optional dependencies:
2023-06-02 23:07:22,896:INFO:                shap: Not installed
2023-06-02 23:07:22,896:INFO:           interpret: Not installed
2023-06-02 23:07:22,896:INFO:                umap: Not installed
2023-06-02 23:07:22,896:INFO:    pandas_profiling: 4.0.0
2023-06-02 23:07:22,896:INFO:  explainerdashboard: Not installed
2023-06-02 23:07:22,896:INFO:             autoviz: Not installed
2023-06-02 23:07:22,896:INFO:           fairlearn: Not installed
2023-06-02 23:07:22,896:INFO:             xgboost: Not installed
2023-06-02 23:07:22,896:INFO:            catboost: Not installed
2023-06-02 23:07:22,896:INFO:              kmodes: Not installed
2023-06-02 23:07:22,896:INFO:             mlxtend: Not installed
2023-06-02 23:07:22,896:INFO:       statsforecast: Not installed
2023-06-02 23:07:22,896:INFO:        tune_sklearn: Not installed
2023-06-02 23:07:22,896:INFO:                 ray: Not installed
2023-06-02 23:07:22,896:INFO:            hyperopt: Not installed
2023-06-02 23:07:22,896:INFO:              optuna: Not installed
2023-06-02 23:07:22,896:INFO:               skopt: Not installed
2023-06-02 23:07:22,897:INFO:              mlflow: Not installed
2023-06-02 23:07:22,897:INFO:              gradio: Not installed
2023-06-02 23:07:22,897:INFO:             fastapi: Not installed
2023-06-02 23:07:22,897:INFO:             uvicorn: Not installed
2023-06-02 23:07:22,897:INFO:              m2cgen: Not installed
2023-06-02 23:07:22,897:INFO:           evidently: Not installed
2023-06-02 23:07:22,897:INFO:               fugue: Not installed
2023-06-02 23:07:22,897:INFO:           streamlit: Not installed
2023-06-02 23:07:22,897:INFO:             prophet: Not installed
2023-06-02 23:07:22,897:INFO:None
2023-06-02 23:07:22,897:INFO:Set up data.
2023-06-02 23:07:23,321:INFO:Set up train/test split.
2023-06-02 23:07:23,497:INFO:Set up index.
2023-06-02 23:07:23,498:INFO:Set up folding strategy.
2023-06-02 23:07:23,498:INFO:Assigning column types.
2023-06-02 23:07:23,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 23:07:23,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 23:07:23,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 23:07:23,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 23:07:25,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 23:07:25,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,688:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 23:07:25,735:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 23:07:25,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 23:07:25,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:25,953:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 23:07:26,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:26,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:26,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:26,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:26,207:INFO:Preparing preprocessing pipeline...
2023-06-02 23:07:26,278:INFO:Set up label encoding.
2023-06-02 23:07:26,280:INFO:Set up simple imputation.
2023-06-02 23:07:27,138:INFO:Finished creating preprocessing pipeline.
2023-06-02 23:07:27,151:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kg/w853qbnj03x0b8wb35_f_v540000gp/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', '...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-06-02 23:07:27,151:INFO:Creating final display dataframe.
2023-06-02 23:07:27,885:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                2894  
1                                              target  
2                                          Multiclass  
3   1: 0, 10: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: ...  
4                                         (1795, 785)  
5                                         (1795, 785)  
6                                         (1436, 785)  
7                                          (359, 785)  
8                                                 784  
9                                                True  
10                                             simple  
11                                             median  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               572e  
2023-06-02 23:07:28,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:28,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:28,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:28,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 23:07:28,258:INFO:setup() successfully completed in 5.53s...............
2023-06-02 23:07:35,235:INFO:Initializing compare_models()
2023-06-02 23:07:35,238:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 23:07:35,238:INFO:Checking exceptions
2023-06-02 23:07:35,282:INFO:Preparing display monitor
2023-06-02 23:07:35,344:INFO:Initializing Logistic Regression
2023-06-02 23:07:35,345:INFO:Total runtime is 1.1849403381347657e-05 minutes
2023-06-02 23:07:35,349:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:35,350:INFO:Initializing create_model()
2023-06-02 23:07:35,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:35,351:INFO:Checking exceptions
2023-06-02 23:07:35,352:INFO:Importing libraries
2023-06-02 23:07:35,352:INFO:Copying training dataset
2023-06-02 23:07:35,380:INFO:Defining folds
2023-06-02 23:07:35,380:INFO:Declaring metric variables
2023-06-02 23:07:35,384:INFO:Importing untrained model
2023-06-02 23:07:35,391:INFO:Logistic Regression Imported successfully
2023-06-02 23:07:35,400:INFO:Starting cross validation
2023-06-02 23:07:35,406:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:47,568:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:47,577:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:47,579:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,219:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-02 23:07:48,258:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-02 23:07:48,316:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-02 23:07:48,427:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,430:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,433:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,634:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,636:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,639:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,668:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,671:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,672:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,673:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,674:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,676:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:48,793:INFO:Calculating mean and std
2023-06-02 23:07:48,800:INFO:Creating metrics dataframe
2023-06-02 23:07:48,823:INFO:Uploading results into container
2023-06-02 23:07:48,826:INFO:Uploading model into container now
2023-06-02 23:07:48,827:INFO:_master_model_container: 1
2023-06-02 23:07:48,827:INFO:_display_container: 2
2023-06-02 23:07:48,828:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 23:07:48,828:INFO:create_model() successfully completed......................................
2023-06-02 23:07:49,115:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:49,115:INFO:Creating metrics dataframe
2023-06-02 23:07:49,123:INFO:Initializing K Neighbors Classifier
2023-06-02 23:07:49,123:INFO:Total runtime is 0.22965046564737954 minutes
2023-06-02 23:07:49,127:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:49,127:INFO:Initializing create_model()
2023-06-02 23:07:49,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:49,127:INFO:Checking exceptions
2023-06-02 23:07:49,128:INFO:Importing libraries
2023-06-02 23:07:49,128:INFO:Copying training dataset
2023-06-02 23:07:49,145:INFO:Defining folds
2023-06-02 23:07:49,146:INFO:Declaring metric variables
2023-06-02 23:07:49,149:INFO:Importing untrained model
2023-06-02 23:07:49,154:INFO:K Neighbors Classifier Imported successfully
2023-06-02 23:07:49,162:INFO:Starting cross validation
2023-06-02 23:07:49,172:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:49,781:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,783:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,786:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,804:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,807:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,810:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,811:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,814:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:49,816:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,722:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,724:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,726:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,727:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,729:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,731:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:52,859:INFO:Calculating mean and std
2023-06-02 23:07:52,873:INFO:Creating metrics dataframe
2023-06-02 23:07:52,900:INFO:Uploading results into container
2023-06-02 23:07:52,902:INFO:Uploading model into container now
2023-06-02 23:07:52,904:INFO:_master_model_container: 2
2023-06-02 23:07:52,904:INFO:_display_container: 2
2023-06-02 23:07:52,907:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 23:07:52,907:INFO:create_model() successfully completed......................................
2023-06-02 23:07:53,208:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:53,208:INFO:Creating metrics dataframe
2023-06-02 23:07:53,216:INFO:Initializing Naive Bayes
2023-06-02 23:07:53,216:INFO:Total runtime is 0.29786181449890137 minutes
2023-06-02 23:07:53,219:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:53,219:INFO:Initializing create_model()
2023-06-02 23:07:53,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:53,220:INFO:Checking exceptions
2023-06-02 23:07:53,220:INFO:Importing libraries
2023-06-02 23:07:53,220:INFO:Copying training dataset
2023-06-02 23:07:53,235:INFO:Defining folds
2023-06-02 23:07:53,236:INFO:Declaring metric variables
2023-06-02 23:07:53,239:INFO:Importing untrained model
2023-06-02 23:07:53,242:INFO:Naive Bayes Imported successfully
2023-06-02 23:07:53,247:INFO:Starting cross validation
2023-06-02 23:07:53,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:53,777:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,777:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,779:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,779:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,782:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,783:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,792:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,794:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,795:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,797:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,799:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:53,800:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:55,589:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:55,591:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:55,592:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:55,701:INFO:Calculating mean and std
2023-06-02 23:07:55,702:INFO:Creating metrics dataframe
2023-06-02 23:07:55,707:INFO:Uploading results into container
2023-06-02 23:07:55,707:INFO:Uploading model into container now
2023-06-02 23:07:55,707:INFO:_master_model_container: 3
2023-06-02 23:07:55,707:INFO:_display_container: 2
2023-06-02 23:07:55,707:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 23:07:55,707:INFO:create_model() successfully completed......................................
2023-06-02 23:07:55,816:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:55,816:INFO:Creating metrics dataframe
2023-06-02 23:07:55,822:INFO:Initializing Decision Tree Classifier
2023-06-02 23:07:55,822:INFO:Total runtime is 0.34130538304646807 minutes
2023-06-02 23:07:55,824:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:55,824:INFO:Initializing create_model()
2023-06-02 23:07:55,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:55,825:INFO:Checking exceptions
2023-06-02 23:07:55,825:INFO:Importing libraries
2023-06-02 23:07:55,825:INFO:Copying training dataset
2023-06-02 23:07:55,839:INFO:Defining folds
2023-06-02 23:07:55,839:INFO:Declaring metric variables
2023-06-02 23:07:55,842:INFO:Importing untrained model
2023-06-02 23:07:55,844:INFO:Decision Tree Classifier Imported successfully
2023-06-02 23:07:55,850:INFO:Starting cross validation
2023-06-02 23:07:55,853:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:56,431:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,434:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,440:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,445:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,447:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,449:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,452:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,454:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,456:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,456:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,457:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,458:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,462:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,464:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,466:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:56,574:INFO:Calculating mean and std
2023-06-02 23:07:56,575:INFO:Creating metrics dataframe
2023-06-02 23:07:56,580:INFO:Uploading results into container
2023-06-02 23:07:56,581:INFO:Uploading model into container now
2023-06-02 23:07:56,581:INFO:_master_model_container: 4
2023-06-02 23:07:56,581:INFO:_display_container: 2
2023-06-02 23:07:56,582:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2894, splitter='best')
2023-06-02 23:07:56,582:INFO:create_model() successfully completed......................................
2023-06-02 23:07:56,699:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:56,699:INFO:Creating metrics dataframe
2023-06-02 23:07:56,707:INFO:Initializing SVM - Linear Kernel
2023-06-02 23:07:56,707:INFO:Total runtime is 0.35604628324508664 minutes
2023-06-02 23:07:56,709:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:56,709:INFO:Initializing create_model()
2023-06-02 23:07:56,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:56,709:INFO:Checking exceptions
2023-06-02 23:07:56,710:INFO:Importing libraries
2023-06-02 23:07:56,710:INFO:Copying training dataset
2023-06-02 23:07:56,741:INFO:Defining folds
2023-06-02 23:07:56,741:INFO:Declaring metric variables
2023-06-02 23:07:56,749:INFO:Importing untrained model
2023-06-02 23:07:56,783:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 23:07:56,796:INFO:Starting cross validation
2023-06-02 23:07:56,800:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:57,848:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:07:57,851:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,853:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,855:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,927:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:07:57,928:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,932:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,934:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,945:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:07:57,946:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,948:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,949:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:07:57,949:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,950:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,951:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,953:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,997:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:07:57,997:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:57,999:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:58,001:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:58,110:INFO:Calculating mean and std
2023-06-02 23:07:58,111:INFO:Creating metrics dataframe
2023-06-02 23:07:58,117:INFO:Uploading results into container
2023-06-02 23:07:58,118:INFO:Uploading model into container now
2023-06-02 23:07:58,118:INFO:_master_model_container: 5
2023-06-02 23:07:58,118:INFO:_display_container: 2
2023-06-02 23:07:58,119:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2894, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 23:07:58,119:INFO:create_model() successfully completed......................................
2023-06-02 23:07:58,268:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:58,268:INFO:Creating metrics dataframe
2023-06-02 23:07:58,275:INFO:Initializing Ridge Classifier
2023-06-02 23:07:58,275:INFO:Total runtime is 0.38217653433481846 minutes
2023-06-02 23:07:58,277:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:58,277:INFO:Initializing create_model()
2023-06-02 23:07:58,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:58,277:INFO:Checking exceptions
2023-06-02 23:07:58,277:INFO:Importing libraries
2023-06-02 23:07:58,277:INFO:Copying training dataset
2023-06-02 23:07:58,291:INFO:Defining folds
2023-06-02 23:07:58,291:INFO:Declaring metric variables
2023-06-02 23:07:58,294:INFO:Importing untrained model
2023-06-02 23:07:58,296:INFO:Ridge Classifier Imported successfully
2023-06-02 23:07:58,300:INFO:Starting cross validation
2023-06-02 23:07:58,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:07:59,149:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:07:59,151:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,152:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:07:59,153:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,155:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,156:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,157:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,162:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,173:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:07:59,175:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,178:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,184:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,188:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:07:59,189:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,191:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,193:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,205:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:07:59,206:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,208:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,210:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:07:59,216:INFO:Calculating mean and std
2023-06-02 23:07:59,218:INFO:Creating metrics dataframe
2023-06-02 23:07:59,234:INFO:Uploading results into container
2023-06-02 23:07:59,235:INFO:Uploading model into container now
2023-06-02 23:07:59,235:INFO:_master_model_container: 6
2023-06-02 23:07:59,236:INFO:_display_container: 2
2023-06-02 23:07:59,236:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2894, solver='auto',
                tol=0.0001)
2023-06-02 23:07:59,236:INFO:create_model() successfully completed......................................
2023-06-02 23:07:59,363:INFO:SubProcess create_model() end ==================================
2023-06-02 23:07:59,363:INFO:Creating metrics dataframe
2023-06-02 23:07:59,372:INFO:Initializing Random Forest Classifier
2023-06-02 23:07:59,372:INFO:Total runtime is 0.40046638647715244 minutes
2023-06-02 23:07:59,376:INFO:SubProcess create_model() called ==================================
2023-06-02 23:07:59,376:INFO:Initializing create_model()
2023-06-02 23:07:59,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:07:59,376:INFO:Checking exceptions
2023-06-02 23:07:59,376:INFO:Importing libraries
2023-06-02 23:07:59,376:INFO:Copying training dataset
2023-06-02 23:07:59,392:INFO:Defining folds
2023-06-02 23:07:59,393:INFO:Declaring metric variables
2023-06-02 23:07:59,395:INFO:Importing untrained model
2023-06-02 23:07:59,398:INFO:Random Forest Classifier Imported successfully
2023-06-02 23:07:59,403:INFO:Starting cross validation
2023-06-02 23:07:59,407:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:00,763:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,765:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,768:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,773:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,773:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,775:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,775:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,777:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,777:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,795:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,797:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,800:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,829:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,831:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,833:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:00,839:INFO:Calculating mean and std
2023-06-02 23:08:00,841:INFO:Creating metrics dataframe
2023-06-02 23:08:00,854:INFO:Uploading results into container
2023-06-02 23:08:00,855:INFO:Uploading model into container now
2023-06-02 23:08:00,855:INFO:_master_model_container: 7
2023-06-02 23:08:00,855:INFO:_display_container: 2
2023-06-02 23:08:00,856:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:08:00,856:INFO:create_model() successfully completed......................................
2023-06-02 23:08:00,977:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:00,977:INFO:Creating metrics dataframe
2023-06-02 23:08:00,985:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 23:08:00,985:INFO:Total runtime is 0.4273525158564249 minutes
2023-06-02 23:08:00,988:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:00,988:INFO:Initializing create_model()
2023-06-02 23:08:00,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:00,988:INFO:Checking exceptions
2023-06-02 23:08:00,988:INFO:Importing libraries
2023-06-02 23:08:00,988:INFO:Copying training dataset
2023-06-02 23:08:01,004:INFO:Defining folds
2023-06-02 23:08:01,005:INFO:Declaring metric variables
2023-06-02 23:08:01,008:INFO:Importing untrained model
2023-06-02 23:08:01,011:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 23:08:01,016:INFO:Starting cross validation
2023-06-02 23:08:01,019:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:01,225:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 23:08:01,225:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 23:08:01,229:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 23:08:01,249:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 23:08:01,269:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 23:08:01,766:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,768:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,770:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,770:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,774:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:01,775:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:01,776:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,776:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,784:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,788:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,790:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:01,792:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,794:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,795:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,796:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,797:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,797:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:01,798:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,798:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:01,799:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:01,922:INFO:Calculating mean and std
2023-06-02 23:08:01,924:INFO:Creating metrics dataframe
2023-06-02 23:08:01,933:INFO:Uploading results into container
2023-06-02 23:08:01,933:INFO:Uploading model into container now
2023-06-02 23:08:01,933:INFO:_master_model_container: 8
2023-06-02 23:08:01,933:INFO:_display_container: 2
2023-06-02 23:08:01,934:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 23:08:01,934:INFO:create_model() successfully completed......................................
2023-06-02 23:08:02,046:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:02,047:INFO:Creating metrics dataframe
2023-06-02 23:08:02,055:INFO:Initializing Ada Boost Classifier
2023-06-02 23:08:02,056:INFO:Total runtime is 0.44519183238347365 minutes
2023-06-02 23:08:02,058:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:02,059:INFO:Initializing create_model()
2023-06-02 23:08:02,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:02,059:INFO:Checking exceptions
2023-06-02 23:08:02,059:INFO:Importing libraries
2023-06-02 23:08:02,059:INFO:Copying training dataset
2023-06-02 23:08:02,074:INFO:Defining folds
2023-06-02 23:08:02,074:INFO:Declaring metric variables
2023-06-02 23:08:02,078:INFO:Importing untrained model
2023-06-02 23:08:02,081:INFO:Ada Boost Classifier Imported successfully
2023-06-02 23:08:02,088:INFO:Starting cross validation
2023-06-02 23:08:02,091:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:03,306:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,309:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,310:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,311:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,313:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,317:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,318:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,322:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,325:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,342:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,345:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,348:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,348:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,350:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,352:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:03,465:INFO:Calculating mean and std
2023-06-02 23:08:03,467:INFO:Creating metrics dataframe
2023-06-02 23:08:03,476:INFO:Uploading results into container
2023-06-02 23:08:03,476:INFO:Uploading model into container now
2023-06-02 23:08:03,477:INFO:_master_model_container: 9
2023-06-02 23:08:03,477:INFO:_display_container: 2
2023-06-02 23:08:03,477:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2894)
2023-06-02 23:08:03,477:INFO:create_model() successfully completed......................................
2023-06-02 23:08:03,594:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:03,594:INFO:Creating metrics dataframe
2023-06-02 23:08:03,603:INFO:Initializing Gradient Boosting Classifier
2023-06-02 23:08:03,604:INFO:Total runtime is 0.47099208434422807 minutes
2023-06-02 23:08:03,607:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:03,607:INFO:Initializing create_model()
2023-06-02 23:08:03,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:03,607:INFO:Checking exceptions
2023-06-02 23:08:03,607:INFO:Importing libraries
2023-06-02 23:08:03,607:INFO:Copying training dataset
2023-06-02 23:08:03,627:INFO:Defining folds
2023-06-02 23:08:03,627:INFO:Declaring metric variables
2023-06-02 23:08:03,631:INFO:Importing untrained model
2023-06-02 23:08:03,636:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 23:08:03,643:INFO:Starting cross validation
2023-06-02 23:08:03,647:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:28,995:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 23:08:29,148:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 23:08:29,180:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 23:08:29,504:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 23:08:30,653:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,655:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,657:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,681:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,683:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,685:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,699:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,702:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,705:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,941:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,943:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,945:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,972:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:319: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-02 23:08:30,988:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,990:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:30,992:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:31,102:INFO:Calculating mean and std
2023-06-02 23:08:31,106:INFO:Creating metrics dataframe
2023-06-02 23:08:31,122:INFO:Uploading results into container
2023-06-02 23:08:31,123:INFO:Uploading model into container now
2023-06-02 23:08:31,124:INFO:_master_model_container: 10
2023-06-02 23:08:31,124:INFO:_display_container: 2
2023-06-02 23:08:31,125:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 23:08:31,125:INFO:create_model() successfully completed......................................
2023-06-02 23:08:31,410:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:31,410:INFO:Creating metrics dataframe
2023-06-02 23:08:31,422:INFO:Initializing Linear Discriminant Analysis
2023-06-02 23:08:31,423:INFO:Total runtime is 0.934643034140269 minutes
2023-06-02 23:08:31,427:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:31,427:INFO:Initializing create_model()
2023-06-02 23:08:31,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:31,428:INFO:Checking exceptions
2023-06-02 23:08:31,429:INFO:Importing libraries
2023-06-02 23:08:31,429:INFO:Copying training dataset
2023-06-02 23:08:31,448:INFO:Defining folds
2023-06-02 23:08:31,448:INFO:Declaring metric variables
2023-06-02 23:08:31,451:INFO:Importing untrained model
2023-06-02 23:08:31,455:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 23:08:31,463:INFO:Starting cross validation
2023-06-02 23:08:31,467:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:33,230:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,233:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,235:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,251:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,253:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,255:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,257:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,260:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,262:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,307:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,309:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,311:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,423:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,426:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,428:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:33,538:INFO:Calculating mean and std
2023-06-02 23:08:33,539:INFO:Creating metrics dataframe
2023-06-02 23:08:33,549:INFO:Uploading results into container
2023-06-02 23:08:33,550:INFO:Uploading model into container now
2023-06-02 23:08:33,550:INFO:_master_model_container: 11
2023-06-02 23:08:33,550:INFO:_display_container: 2
2023-06-02 23:08:33,550:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 23:08:33,550:INFO:create_model() successfully completed......................................
2023-06-02 23:08:33,672:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:33,672:INFO:Creating metrics dataframe
2023-06-02 23:08:33,681:INFO:Initializing Extra Trees Classifier
2023-06-02 23:08:33,681:INFO:Total runtime is 0.972287098566691 minutes
2023-06-02 23:08:33,684:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:33,685:INFO:Initializing create_model()
2023-06-02 23:08:33,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:33,686:INFO:Checking exceptions
2023-06-02 23:08:33,686:INFO:Importing libraries
2023-06-02 23:08:33,686:INFO:Copying training dataset
2023-06-02 23:08:33,701:INFO:Defining folds
2023-06-02 23:08:33,701:INFO:Declaring metric variables
2023-06-02 23:08:33,704:INFO:Importing untrained model
2023-06-02 23:08:33,707:INFO:Extra Trees Classifier Imported successfully
2023-06-02 23:08:33,711:INFO:Starting cross validation
2023-06-02 23:08:33,715:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:35,104:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,106:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,108:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,129:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,132:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,132:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,134:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,136:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,138:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,146:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,155:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,159:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,173:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,176:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,179:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:35,189:INFO:Calculating mean and std
2023-06-02 23:08:35,192:INFO:Creating metrics dataframe
2023-06-02 23:08:35,219:INFO:Uploading results into container
2023-06-02 23:08:35,220:INFO:Uploading model into container now
2023-06-02 23:08:35,220:INFO:_master_model_container: 12
2023-06-02 23:08:35,221:INFO:_display_container: 2
2023-06-02 23:08:35,221:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:08:35,221:INFO:create_model() successfully completed......................................
2023-06-02 23:08:35,347:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:35,347:INFO:Creating metrics dataframe
2023-06-02 23:08:35,357:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 23:08:35,357:INFO:Total runtime is 1.0002205173174539 minutes
2023-06-02 23:08:35,361:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:35,362:INFO:Initializing create_model()
2023-06-02 23:08:35,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:35,362:INFO:Checking exceptions
2023-06-02 23:08:35,362:INFO:Importing libraries
2023-06-02 23:08:35,362:INFO:Copying training dataset
2023-06-02 23:08:35,378:INFO:Defining folds
2023-06-02 23:08:35,378:INFO:Declaring metric variables
2023-06-02 23:08:35,381:INFO:Importing untrained model
2023-06-02 23:08:35,385:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 23:08:35,392:INFO:Starting cross validation
2023-06-02 23:08:35,396:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:40,449:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,451:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,453:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,685:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,687:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,689:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,690:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,692:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,696:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,709:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,712:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,713:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,714:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,715:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,715:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:40,836:INFO:Calculating mean and std
2023-06-02 23:08:40,840:INFO:Creating metrics dataframe
2023-06-02 23:08:40,860:INFO:Uploading results into container
2023-06-02 23:08:40,862:INFO:Uploading model into container now
2023-06-02 23:08:40,862:INFO:_master_model_container: 13
2023-06-02 23:08:40,862:INFO:_display_container: 2
2023-06-02 23:08:40,863:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 23:08:40,863:INFO:create_model() successfully completed......................................
2023-06-02 23:08:41,145:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:41,145:INFO:Creating metrics dataframe
2023-06-02 23:08:41,164:INFO:Initializing Dummy Classifier
2023-06-02 23:08:41,164:INFO:Total runtime is 1.0969992001851399 minutes
2023-06-02 23:08:41,170:INFO:SubProcess create_model() called ==================================
2023-06-02 23:08:41,170:INFO:Initializing create_model()
2023-06-02 23:08:41,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e0a5130>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:41,171:INFO:Checking exceptions
2023-06-02 23:08:41,171:INFO:Importing libraries
2023-06-02 23:08:41,171:INFO:Copying training dataset
2023-06-02 23:08:41,195:INFO:Defining folds
2023-06-02 23:08:41,195:INFO:Declaring metric variables
2023-06-02 23:08:41,200:INFO:Importing untrained model
2023-06-02 23:08:41,203:INFO:Dummy Classifier Imported successfully
2023-06-02 23:08:41,210:INFO:Starting cross validation
2023-06-02 23:08:41,213:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:08:41,547:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,549:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,550:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:41,550:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,559:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,561:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,562:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:41,563:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,596:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,598:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,599:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:41,599:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,602:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,603:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,604:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:41,605:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,612:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,614:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,615:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:08:41,615:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:08:41,629:INFO:Calculating mean and std
2023-06-02 23:08:41,631:INFO:Creating metrics dataframe
2023-06-02 23:08:41,656:INFO:Uploading results into container
2023-06-02 23:08:41,656:INFO:Uploading model into container now
2023-06-02 23:08:41,657:INFO:_master_model_container: 14
2023-06-02 23:08:41,657:INFO:_display_container: 2
2023-06-02 23:08:41,657:INFO:DummyClassifier(constant=None, random_state=2894, strategy='prior')
2023-06-02 23:08:41,657:INFO:create_model() successfully completed......................................
2023-06-02 23:08:41,774:INFO:SubProcess create_model() end ==================================
2023-06-02 23:08:41,774:INFO:Creating metrics dataframe
2023-06-02 23:08:41,793:INFO:Initializing create_model()
2023-06-02 23:08:41,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:41,793:INFO:Checking exceptions
2023-06-02 23:08:41,794:INFO:Importing libraries
2023-06-02 23:08:41,795:INFO:Copying training dataset
2023-06-02 23:08:41,809:INFO:Defining folds
2023-06-02 23:08:41,809:INFO:Declaring metric variables
2023-06-02 23:08:41,810:INFO:Importing untrained model
2023-06-02 23:08:41,810:INFO:Declaring custom model
2023-06-02 23:08:41,810:INFO:Extra Trees Classifier Imported successfully
2023-06-02 23:08:41,814:INFO:Cross validation set to False
2023-06-02 23:08:41,814:INFO:Fitting Model
2023-06-02 23:08:42,418:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:08:42,418:INFO:create_model() successfully completed......................................
2023-06-02 23:08:42,541:INFO:Initializing create_model()
2023-06-02 23:08:42,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:42,541:INFO:Checking exceptions
2023-06-02 23:08:42,542:INFO:Importing libraries
2023-06-02 23:08:42,543:INFO:Copying training dataset
2023-06-02 23:08:42,557:INFO:Defining folds
2023-06-02 23:08:42,557:INFO:Declaring metric variables
2023-06-02 23:08:42,557:INFO:Importing untrained model
2023-06-02 23:08:42,557:INFO:Declaring custom model
2023-06-02 23:08:42,558:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 23:08:42,561:INFO:Cross validation set to False
2023-06-02 23:08:42,561:INFO:Fitting Model
2023-06-02 23:08:53,868:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 23:08:53,869:INFO:create_model() successfully completed......................................
2023-06-02 23:08:54,101:INFO:Initializing create_model()
2023-06-02 23:08:54,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:54,101:INFO:Checking exceptions
2023-06-02 23:08:54,102:INFO:Importing libraries
2023-06-02 23:08:54,102:INFO:Copying training dataset
2023-06-02 23:08:54,118:INFO:Defining folds
2023-06-02 23:08:54,118:INFO:Declaring metric variables
2023-06-02 23:08:54,118:INFO:Importing untrained model
2023-06-02 23:08:54,118:INFO:Declaring custom model
2023-06-02 23:08:54,119:INFO:Random Forest Classifier Imported successfully
2023-06-02 23:08:54,122:INFO:Cross validation set to False
2023-06-02 23:08:54,122:INFO:Fitting Model
2023-06-02 23:08:54,692:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:08:54,692:INFO:create_model() successfully completed......................................
2023-06-02 23:08:54,803:INFO:Initializing create_model()
2023-06-02 23:08:54,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:08:54,803:INFO:Checking exceptions
2023-06-02 23:08:54,805:INFO:Importing libraries
2023-06-02 23:08:54,805:INFO:Copying training dataset
2023-06-02 23:08:54,817:INFO:Defining folds
2023-06-02 23:08:54,817:INFO:Declaring metric variables
2023-06-02 23:08:54,817:INFO:Importing untrained model
2023-06-02 23:08:54,817:INFO:Declaring custom model
2023-06-02 23:08:54,818:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 23:08:54,820:INFO:Cross validation set to False
2023-06-02 23:08:54,821:INFO:Fitting Model
2023-06-02 23:09:14,876:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 23:09:14,895:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 23:09:14,895:INFO:create_model() successfully completed......................................
2023-06-02 23:09:15,169:INFO:Initializing create_model()
2023-06-02 23:09:15,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:09:15,169:INFO:Checking exceptions
2023-06-02 23:09:15,170:INFO:Importing libraries
2023-06-02 23:09:15,170:INFO:Copying training dataset
2023-06-02 23:09:15,217:INFO:Defining folds
2023-06-02 23:09:15,217:INFO:Declaring metric variables
2023-06-02 23:09:15,218:INFO:Importing untrained model
2023-06-02 23:09:15,218:INFO:Declaring custom model
2023-06-02 23:09:15,218:INFO:Logistic Regression Imported successfully
2023-06-02 23:09:15,221:INFO:Cross validation set to False
2023-06-02 23:09:15,221:INFO:Fitting Model
2023-06-02 23:09:29,116:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-02 23:09:29,387:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 23:09:29,387:INFO:create_model() successfully completed......................................
2023-06-02 23:09:29,641:INFO:_master_model_container: 14
2023-06-02 23:09:29,642:INFO:_display_container: 2
2023-06-02 23:09:29,643:INFO:[ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-02 23:09:29,643:INFO:compare_models() successfully completed......................................
2023-06-02 23:17:15,368:INFO:Initializing compare_models()
2023-06-02 23:17:15,368:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 23:17:15,368:INFO:Checking exceptions
2023-06-02 23:17:15,379:INFO:Preparing display monitor
2023-06-02 23:17:15,418:INFO:Initializing Logistic Regression
2023-06-02 23:17:15,418:INFO:Total runtime is 5.602836608886719e-06 minutes
2023-06-02 23:17:15,428:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:15,429:INFO:Initializing create_model()
2023-06-02 23:17:15,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:15,430:INFO:Checking exceptions
2023-06-02 23:17:15,430:INFO:Importing libraries
2023-06-02 23:17:15,430:INFO:Copying training dataset
2023-06-02 23:17:15,459:INFO:Defining folds
2023-06-02 23:17:15,459:INFO:Declaring metric variables
2023-06-02 23:17:15,463:INFO:Importing untrained model
2023-06-02 23:17:15,468:INFO:Logistic Regression Imported successfully
2023-06-02 23:17:15,477:INFO:Starting cross validation
2023-06-02 23:17:15,480:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:18,610:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:18,611:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:18,613:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:18,913:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:18,914:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:18,916:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,062:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,065:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,070:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,104:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,106:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,109:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,185:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,187:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,188:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:19,195:INFO:Calculating mean and std
2023-06-02 23:17:19,243:INFO:Creating metrics dataframe
2023-06-02 23:17:19,291:INFO:Uploading results into container
2023-06-02 23:17:19,291:INFO:Uploading model into container now
2023-06-02 23:17:19,292:INFO:_master_model_container: 15
2023-06-02 23:17:19,292:INFO:_display_container: 3
2023-06-02 23:17:19,293:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 23:17:19,293:INFO:create_model() successfully completed......................................
2023-06-02 23:17:19,562:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:19,562:INFO:Creating metrics dataframe
2023-06-02 23:17:19,567:INFO:Initializing K Neighbors Classifier
2023-06-02 23:17:19,567:INFO:Total runtime is 0.06914871533711751 minutes
2023-06-02 23:17:19,569:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:19,570:INFO:Initializing create_model()
2023-06-02 23:17:19,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:19,571:INFO:Checking exceptions
2023-06-02 23:17:19,571:INFO:Importing libraries
2023-06-02 23:17:19,572:INFO:Copying training dataset
2023-06-02 23:17:19,601:INFO:Defining folds
2023-06-02 23:17:19,601:INFO:Declaring metric variables
2023-06-02 23:17:19,611:INFO:Importing untrained model
2023-06-02 23:17:19,615:INFO:K Neighbors Classifier Imported successfully
2023-06-02 23:17:19,626:INFO:Starting cross validation
2023-06-02 23:17:19,629:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:20,121:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:20,122:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:20,122:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:20,126:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:20,127:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:20,131:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,324:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,325:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,327:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,409:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,415:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,418:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,453:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,454:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,455:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:22,566:INFO:Calculating mean and std
2023-06-02 23:17:22,569:INFO:Creating metrics dataframe
2023-06-02 23:17:22,582:INFO:Uploading results into container
2023-06-02 23:17:22,583:INFO:Uploading model into container now
2023-06-02 23:17:22,583:INFO:_master_model_container: 16
2023-06-02 23:17:22,583:INFO:_display_container: 3
2023-06-02 23:17:22,583:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 23:17:22,583:INFO:create_model() successfully completed......................................
2023-06-02 23:17:22,892:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:22,892:INFO:Creating metrics dataframe
2023-06-02 23:17:22,898:INFO:Initializing Naive Bayes
2023-06-02 23:17:22,898:INFO:Total runtime is 0.12466135025024414 minutes
2023-06-02 23:17:22,900:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:22,900:INFO:Initializing create_model()
2023-06-02 23:17:22,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:22,901:INFO:Checking exceptions
2023-06-02 23:17:22,901:INFO:Importing libraries
2023-06-02 23:17:22,901:INFO:Copying training dataset
2023-06-02 23:17:22,916:INFO:Defining folds
2023-06-02 23:17:22,917:INFO:Declaring metric variables
2023-06-02 23:17:22,928:INFO:Importing untrained model
2023-06-02 23:17:22,935:INFO:Naive Bayes Imported successfully
2023-06-02 23:17:22,943:INFO:Starting cross validation
2023-06-02 23:17:22,948:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:23,356:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,359:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,362:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,385:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,387:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,388:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,435:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,439:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,441:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,516:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,517:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,518:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,521:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,524:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,526:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:23,635:INFO:Calculating mean and std
2023-06-02 23:17:23,636:INFO:Creating metrics dataframe
2023-06-02 23:17:23,645:INFO:Uploading results into container
2023-06-02 23:17:23,646:INFO:Uploading model into container now
2023-06-02 23:17:23,646:INFO:_master_model_container: 17
2023-06-02 23:17:23,646:INFO:_display_container: 3
2023-06-02 23:17:23,646:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 23:17:23,646:INFO:create_model() successfully completed......................................
2023-06-02 23:17:23,748:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:23,749:INFO:Creating metrics dataframe
2023-06-02 23:17:23,754:INFO:Initializing Decision Tree Classifier
2023-06-02 23:17:23,754:INFO:Total runtime is 0.13892736832300823 minutes
2023-06-02 23:17:23,756:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:23,756:INFO:Initializing create_model()
2023-06-02 23:17:23,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:23,756:INFO:Checking exceptions
2023-06-02 23:17:23,756:INFO:Importing libraries
2023-06-02 23:17:23,756:INFO:Copying training dataset
2023-06-02 23:17:23,767:INFO:Defining folds
2023-06-02 23:17:23,767:INFO:Declaring metric variables
2023-06-02 23:17:23,769:INFO:Importing untrained model
2023-06-02 23:17:23,772:INFO:Decision Tree Classifier Imported successfully
2023-06-02 23:17:23,776:INFO:Starting cross validation
2023-06-02 23:17:23,778:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:24,013:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,014:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,015:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,017:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,018:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,019:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,021:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,023:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,025:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,039:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,042:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,043:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,069:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,071:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,072:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,075:INFO:Calculating mean and std
2023-06-02 23:17:24,076:INFO:Creating metrics dataframe
2023-06-02 23:17:24,099:INFO:Uploading results into container
2023-06-02 23:17:24,100:INFO:Uploading model into container now
2023-06-02 23:17:24,100:INFO:_master_model_container: 18
2023-06-02 23:17:24,100:INFO:_display_container: 3
2023-06-02 23:17:24,100:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2894, splitter='best')
2023-06-02 23:17:24,100:INFO:create_model() successfully completed......................................
2023-06-02 23:17:24,210:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:24,210:INFO:Creating metrics dataframe
2023-06-02 23:17:24,214:INFO:Initializing SVM - Linear Kernel
2023-06-02 23:17:24,215:INFO:Total runtime is 0.14660768508911134 minutes
2023-06-02 23:17:24,216:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:24,216:INFO:Initializing create_model()
2023-06-02 23:17:24,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:24,216:INFO:Checking exceptions
2023-06-02 23:17:24,217:INFO:Importing libraries
2023-06-02 23:17:24,217:INFO:Copying training dataset
2023-06-02 23:17:24,227:INFO:Defining folds
2023-06-02 23:17:24,227:INFO:Declaring metric variables
2023-06-02 23:17:24,230:INFO:Importing untrained model
2023-06-02 23:17:24,232:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 23:17:24,235:INFO:Starting cross validation
2023-06-02 23:17:24,237:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:24,375:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:17:24,376:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,377:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,379:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,393:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:17:24,394:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,395:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:17:24,395:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,395:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,396:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,397:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,400:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,418:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:17:24,419:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,420:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,420:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 23:17:24,421:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,422:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,422:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,423:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,532:INFO:Calculating mean and std
2023-06-02 23:17:24,533:INFO:Creating metrics dataframe
2023-06-02 23:17:24,541:INFO:Uploading results into container
2023-06-02 23:17:24,541:INFO:Uploading model into container now
2023-06-02 23:17:24,541:INFO:_master_model_container: 19
2023-06-02 23:17:24,541:INFO:_display_container: 3
2023-06-02 23:17:24,542:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2894, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 23:17:24,542:INFO:create_model() successfully completed......................................
2023-06-02 23:17:24,638:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:24,638:INFO:Creating metrics dataframe
2023-06-02 23:17:24,643:INFO:Initializing Ridge Classifier
2023-06-02 23:17:24,643:INFO:Total runtime is 0.15375133355458578 minutes
2023-06-02 23:17:24,645:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:24,645:INFO:Initializing create_model()
2023-06-02 23:17:24,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:24,645:INFO:Checking exceptions
2023-06-02 23:17:24,645:INFO:Importing libraries
2023-06-02 23:17:24,645:INFO:Copying training dataset
2023-06-02 23:17:24,655:INFO:Defining folds
2023-06-02 23:17:24,655:INFO:Declaring metric variables
2023-06-02 23:17:24,657:INFO:Importing untrained model
2023-06-02 23:17:24,660:INFO:Ridge Classifier Imported successfully
2023-06-02 23:17:24,663:INFO:Starting cross validation
2023-06-02 23:17:24,665:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:24,814:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:17:24,815:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,816:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,817:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,834:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:17:24,834:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,835:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,836:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,838:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:17:24,838:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,840:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,844:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,844:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:17:24,844:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,845:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,846:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,847:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 23:17:24,847:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,851:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,853:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:24,868:INFO:Calculating mean and std
2023-06-02 23:17:24,869:INFO:Creating metrics dataframe
2023-06-02 23:17:24,889:INFO:Uploading results into container
2023-06-02 23:17:24,889:INFO:Uploading model into container now
2023-06-02 23:17:24,890:INFO:_master_model_container: 20
2023-06-02 23:17:24,890:INFO:_display_container: 3
2023-06-02 23:17:24,890:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2894, solver='auto',
                tol=0.0001)
2023-06-02 23:17:24,890:INFO:create_model() successfully completed......................................
2023-06-02 23:17:24,991:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:24,991:INFO:Creating metrics dataframe
2023-06-02 23:17:24,996:INFO:Initializing Random Forest Classifier
2023-06-02 23:17:24,996:INFO:Total runtime is 0.15963799953460694 minutes
2023-06-02 23:17:24,998:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:24,999:INFO:Initializing create_model()
2023-06-02 23:17:24,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:24,999:INFO:Checking exceptions
2023-06-02 23:17:24,999:INFO:Importing libraries
2023-06-02 23:17:24,999:INFO:Copying training dataset
2023-06-02 23:17:25,015:INFO:Defining folds
2023-06-02 23:17:25,015:INFO:Declaring metric variables
2023-06-02 23:17:25,017:INFO:Importing untrained model
2023-06-02 23:17:25,020:INFO:Random Forest Classifier Imported successfully
2023-06-02 23:17:25,025:INFO:Starting cross validation
2023-06-02 23:17:25,027:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:25,398:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,399:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,400:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,430:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,431:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,432:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,448:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,449:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,450:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,462:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,463:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,464:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,479:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,480:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,481:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,485:INFO:Calculating mean and std
2023-06-02 23:17:25,487:INFO:Creating metrics dataframe
2023-06-02 23:17:25,508:INFO:Uploading results into container
2023-06-02 23:17:25,508:INFO:Uploading model into container now
2023-06-02 23:17:25,508:INFO:_master_model_container: 21
2023-06-02 23:17:25,508:INFO:_display_container: 3
2023-06-02 23:17:25,509:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:17:25,509:INFO:create_model() successfully completed......................................
2023-06-02 23:17:25,642:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:25,642:INFO:Creating metrics dataframe
2023-06-02 23:17:25,647:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 23:17:25,647:INFO:Total runtime is 0.17048569917678835 minutes
2023-06-02 23:17:25,649:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:25,649:INFO:Initializing create_model()
2023-06-02 23:17:25,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:25,649:INFO:Checking exceptions
2023-06-02 23:17:25,649:INFO:Importing libraries
2023-06-02 23:17:25,649:INFO:Copying training dataset
2023-06-02 23:17:25,666:INFO:Defining folds
2023-06-02 23:17:25,666:INFO:Declaring metric variables
2023-06-02 23:17:25,668:INFO:Importing untrained model
2023-06-02 23:17:25,670:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 23:17:25,677:INFO:Starting cross validation
2023-06-02 23:17:25,681:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:25,944:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,945:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,946:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:25,946:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,963:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,965:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,965:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:25,966:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,967:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,968:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,968:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,969:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:25,969:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,969:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,969:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:25,970:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,984:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,985:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,986:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:25,986:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:25,992:INFO:Calculating mean and std
2023-06-02 23:17:25,993:INFO:Creating metrics dataframe
2023-06-02 23:17:26,007:INFO:Uploading results into container
2023-06-02 23:17:26,008:INFO:Uploading model into container now
2023-06-02 23:17:26,008:INFO:_master_model_container: 22
2023-06-02 23:17:26,008:INFO:_display_container: 3
2023-06-02 23:17:26,008:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 23:17:26,008:INFO:create_model() successfully completed......................................
2023-06-02 23:17:26,103:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:26,103:INFO:Creating metrics dataframe
2023-06-02 23:17:26,109:INFO:Initializing Ada Boost Classifier
2023-06-02 23:17:26,109:INFO:Total runtime is 0.17818891604741416 minutes
2023-06-02 23:17:26,111:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:26,111:INFO:Initializing create_model()
2023-06-02 23:17:26,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:26,111:INFO:Checking exceptions
2023-06-02 23:17:26,111:INFO:Importing libraries
2023-06-02 23:17:26,111:INFO:Copying training dataset
2023-06-02 23:17:26,122:INFO:Defining folds
2023-06-02 23:17:26,122:INFO:Declaring metric variables
2023-06-02 23:17:26,124:INFO:Importing untrained model
2023-06-02 23:17:26,126:INFO:Ada Boost Classifier Imported successfully
2023-06-02 23:17:26,130:INFO:Starting cross validation
2023-06-02 23:17:26,133:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:26,852:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,856:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,859:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,868:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,900:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,908:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,918:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,921:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,924:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,949:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,950:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,951:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,965:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,966:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,967:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:26,974:INFO:Calculating mean and std
2023-06-02 23:17:26,977:INFO:Creating metrics dataframe
2023-06-02 23:17:27,009:INFO:Uploading results into container
2023-06-02 23:17:27,009:INFO:Uploading model into container now
2023-06-02 23:17:27,010:INFO:_master_model_container: 23
2023-06-02 23:17:27,010:INFO:_display_container: 3
2023-06-02 23:17:27,010:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2894)
2023-06-02 23:17:27,010:INFO:create_model() successfully completed......................................
2023-06-02 23:17:27,361:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:27,361:INFO:Creating metrics dataframe
2023-06-02 23:17:27,377:INFO:Initializing Gradient Boosting Classifier
2023-06-02 23:17:27,377:INFO:Total runtime is 0.19931339820226035 minutes
2023-06-02 23:17:27,433:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:27,450:INFO:Initializing create_model()
2023-06-02 23:17:27,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:27,460:INFO:Checking exceptions
2023-06-02 23:17:27,461:INFO:Importing libraries
2023-06-02 23:17:27,461:INFO:Copying training dataset
2023-06-02 23:17:27,482:INFO:Defining folds
2023-06-02 23:17:27,482:INFO:Declaring metric variables
2023-06-02 23:17:27,485:INFO:Importing untrained model
2023-06-02 23:17:27,493:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 23:17:27,498:INFO:Starting cross validation
2023-06-02 23:17:27,501:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:28,422:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,425:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,425:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,426:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,427:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,428:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,490:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,491:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,492:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,500:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,501:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,504:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,504:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,505:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,506:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:28,621:INFO:Calculating mean and std
2023-06-02 23:17:28,622:INFO:Creating metrics dataframe
2023-06-02 23:17:28,630:INFO:Uploading results into container
2023-06-02 23:17:28,630:INFO:Uploading model into container now
2023-06-02 23:17:28,631:INFO:_master_model_container: 24
2023-06-02 23:17:28,631:INFO:_display_container: 3
2023-06-02 23:17:28,631:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 23:17:28,631:INFO:create_model() successfully completed......................................
2023-06-02 23:17:28,728:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:28,728:INFO:Creating metrics dataframe
2023-06-02 23:17:28,735:INFO:Initializing Linear Discriminant Analysis
2023-06-02 23:17:28,736:INFO:Total runtime is 0.2219576160113017 minutes
2023-06-02 23:17:28,738:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:28,739:INFO:Initializing create_model()
2023-06-02 23:17:28,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:28,739:INFO:Checking exceptions
2023-06-02 23:17:28,739:INFO:Importing libraries
2023-06-02 23:17:28,739:INFO:Copying training dataset
2023-06-02 23:17:28,754:INFO:Defining folds
2023-06-02 23:17:28,754:INFO:Declaring metric variables
2023-06-02 23:17:28,757:INFO:Importing untrained model
2023-06-02 23:17:28,760:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 23:17:28,768:INFO:Starting cross validation
2023-06-02 23:17:28,770:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:29,051:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,053:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,057:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,103:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,106:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,107:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,119:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,119:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,120:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,121:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,122:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,123:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,129:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,131:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,132:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,248:INFO:Calculating mean and std
2023-06-02 23:17:29,249:INFO:Creating metrics dataframe
2023-06-02 23:17:29,257:INFO:Uploading results into container
2023-06-02 23:17:29,257:INFO:Uploading model into container now
2023-06-02 23:17:29,258:INFO:_master_model_container: 25
2023-06-02 23:17:29,258:INFO:_display_container: 3
2023-06-02 23:17:29,258:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 23:17:29,258:INFO:create_model() successfully completed......................................
2023-06-02 23:17:29,353:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:29,353:INFO:Creating metrics dataframe
2023-06-02 23:17:29,359:INFO:Initializing Extra Trees Classifier
2023-06-02 23:17:29,359:INFO:Total runtime is 0.23234921693801883 minutes
2023-06-02 23:17:29,361:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:29,361:INFO:Initializing create_model()
2023-06-02 23:17:29,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:29,361:INFO:Checking exceptions
2023-06-02 23:17:29,361:INFO:Importing libraries
2023-06-02 23:17:29,361:INFO:Copying training dataset
2023-06-02 23:17:29,375:INFO:Defining folds
2023-06-02 23:17:29,375:INFO:Declaring metric variables
2023-06-02 23:17:29,378:INFO:Importing untrained model
2023-06-02 23:17:29,380:INFO:Extra Trees Classifier Imported successfully
2023-06-02 23:17:29,383:INFO:Starting cross validation
2023-06-02 23:17:29,386:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:29,835:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,836:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,836:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,837:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,838:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,839:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,849:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,850:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,851:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,852:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,853:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,854:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,857:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,859:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,860:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:29,971:INFO:Calculating mean and std
2023-06-02 23:17:29,973:INFO:Creating metrics dataframe
2023-06-02 23:17:29,982:INFO:Uploading results into container
2023-06-02 23:17:29,983:INFO:Uploading model into container now
2023-06-02 23:17:29,983:INFO:_master_model_container: 26
2023-06-02 23:17:29,983:INFO:_display_container: 3
2023-06-02 23:17:29,983:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:17:29,983:INFO:create_model() successfully completed......................................
2023-06-02 23:17:30,125:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:30,125:INFO:Creating metrics dataframe
2023-06-02 23:17:30,138:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 23:17:30,139:INFO:Total runtime is 0.24534329970677696 minutes
2023-06-02 23:17:30,142:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:30,142:INFO:Initializing create_model()
2023-06-02 23:17:30,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:30,143:INFO:Checking exceptions
2023-06-02 23:17:30,143:INFO:Importing libraries
2023-06-02 23:17:30,143:INFO:Copying training dataset
2023-06-02 23:17:30,155:INFO:Defining folds
2023-06-02 23:17:30,155:INFO:Declaring metric variables
2023-06-02 23:17:30,159:INFO:Importing untrained model
2023-06-02 23:17:30,163:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 23:17:30,167:INFO:Starting cross validation
2023-06-02 23:17:30,169:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:31,373:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,374:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,375:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,376:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,377:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,380:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,432:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,433:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,434:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,638:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,639:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,640:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,649:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,650:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,651:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:31,766:INFO:Calculating mean and std
2023-06-02 23:17:31,770:INFO:Creating metrics dataframe
2023-06-02 23:17:31,788:INFO:Uploading results into container
2023-06-02 23:17:31,789:INFO:Uploading model into container now
2023-06-02 23:17:31,789:INFO:_master_model_container: 27
2023-06-02 23:17:31,789:INFO:_display_container: 3
2023-06-02 23:17:31,790:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 23:17:31,790:INFO:create_model() successfully completed......................................
2023-06-02 23:17:31,904:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:31,904:INFO:Creating metrics dataframe
2023-06-02 23:17:31,911:INFO:Initializing Dummy Classifier
2023-06-02 23:17:31,911:INFO:Total runtime is 0.2748767137527466 minutes
2023-06-02 23:17:31,913:INFO:SubProcess create_model() called ==================================
2023-06-02 23:17:31,913:INFO:Initializing create_model()
2023-06-02 23:17:31,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13f2a3fa0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:31,913:INFO:Checking exceptions
2023-06-02 23:17:31,913:INFO:Importing libraries
2023-06-02 23:17:31,913:INFO:Copying training dataset
2023-06-02 23:17:31,925:INFO:Defining folds
2023-06-02 23:17:31,925:INFO:Declaring metric variables
2023-06-02 23:17:31,927:INFO:Importing untrained model
2023-06-02 23:17:31,930:INFO:Dummy Classifier Imported successfully
2023-06-02 23:17:31,934:INFO:Starting cross validation
2023-06-02 23:17:31,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 23:17:32,222:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,226:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,228:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:32,229:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,240:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,246:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,251:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:32,252:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,254:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,257:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,258:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:32,258:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,283:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,287:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,287:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,289:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:32,290:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,290:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,291:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 23:17:32,292:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 23:17:32,414:INFO:Calculating mean and std
2023-06-02 23:17:32,422:INFO:Creating metrics dataframe
2023-06-02 23:17:32,500:INFO:Uploading results into container
2023-06-02 23:17:32,506:INFO:Uploading model into container now
2023-06-02 23:17:32,506:INFO:_master_model_container: 28
2023-06-02 23:17:32,506:INFO:_display_container: 3
2023-06-02 23:17:32,506:INFO:DummyClassifier(constant=None, random_state=2894, strategy='prior')
2023-06-02 23:17:32,506:INFO:create_model() successfully completed......................................
2023-06-02 23:17:32,712:INFO:SubProcess create_model() end ==================================
2023-06-02 23:17:32,712:INFO:Creating metrics dataframe
2023-06-02 23:17:32,732:INFO:Initializing create_model()
2023-06-02 23:17:32,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:32,732:INFO:Checking exceptions
2023-06-02 23:17:32,734:INFO:Importing libraries
2023-06-02 23:17:32,734:INFO:Copying training dataset
2023-06-02 23:17:32,754:INFO:Defining folds
2023-06-02 23:17:32,755:INFO:Declaring metric variables
2023-06-02 23:17:32,755:INFO:Importing untrained model
2023-06-02 23:17:32,755:INFO:Declaring custom model
2023-06-02 23:17:32,756:INFO:Extra Trees Classifier Imported successfully
2023-06-02 23:17:32,760:INFO:Cross validation set to False
2023-06-02 23:17:32,760:INFO:Fitting Model
2023-06-02 23:17:33,410:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:17:33,420:INFO:create_model() successfully completed......................................
2023-06-02 23:17:33,875:INFO:Initializing create_model()
2023-06-02 23:17:33,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:33,875:INFO:Checking exceptions
2023-06-02 23:17:33,878:INFO:Importing libraries
2023-06-02 23:17:33,878:INFO:Copying training dataset
2023-06-02 23:17:33,903:INFO:Defining folds
2023-06-02 23:17:33,903:INFO:Declaring metric variables
2023-06-02 23:17:33,904:INFO:Importing untrained model
2023-06-02 23:17:33,904:INFO:Declaring custom model
2023-06-02 23:17:33,904:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 23:17:33,906:INFO:Cross validation set to False
2023-06-02 23:17:33,906:INFO:Fitting Model
2023-06-02 23:17:33,966:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 23:17:33,966:INFO:create_model() successfully completed......................................
2023-06-02 23:17:34,074:INFO:Initializing create_model()
2023-06-02 23:17:34,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:34,075:INFO:Checking exceptions
2023-06-02 23:17:34,077:INFO:Importing libraries
2023-06-02 23:17:34,077:INFO:Copying training dataset
2023-06-02 23:17:34,087:INFO:Defining folds
2023-06-02 23:17:34,088:INFO:Declaring metric variables
2023-06-02 23:17:34,088:INFO:Importing untrained model
2023-06-02 23:17:34,088:INFO:Declaring custom model
2023-06-02 23:17:34,089:INFO:Random Forest Classifier Imported successfully
2023-06-02 23:17:34,095:INFO:Cross validation set to False
2023-06-02 23:17:34,095:INFO:Fitting Model
2023-06-02 23:17:34,171:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False)
2023-06-02 23:17:34,171:INFO:create_model() successfully completed......................................
2023-06-02 23:17:34,286:INFO:Initializing create_model()
2023-06-02 23:17:34,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:34,287:INFO:Checking exceptions
2023-06-02 23:17:34,287:INFO:Importing libraries
2023-06-02 23:17:34,288:INFO:Copying training dataset
2023-06-02 23:17:34,299:INFO:Defining folds
2023-06-02 23:17:34,299:INFO:Declaring metric variables
2023-06-02 23:17:34,299:INFO:Importing untrained model
2023-06-02 23:17:34,299:INFO:Declaring custom model
2023-06-02 23:17:34,299:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 23:17:34,301:INFO:Cross validation set to False
2023-06-02 23:17:34,301:INFO:Fitting Model
2023-06-02 23:17:34,371:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 23:17:34,372:INFO:create_model() successfully completed......................................
2023-06-02 23:17:34,481:INFO:Initializing create_model()
2023-06-02 23:17:34,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e30f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 23:17:34,482:INFO:Checking exceptions
2023-06-02 23:17:34,483:INFO:Importing libraries
2023-06-02 23:17:34,484:INFO:Copying training dataset
2023-06-02 23:17:34,494:INFO:Defining folds
2023-06-02 23:17:34,495:INFO:Declaring metric variables
2023-06-02 23:17:34,495:INFO:Importing untrained model
2023-06-02 23:17:34,495:INFO:Declaring custom model
2023-06-02 23:17:34,496:INFO:Logistic Regression Imported successfully
2023-06-02 23:17:34,498:INFO:Cross validation set to False
2023-06-02 23:17:34,498:INFO:Fitting Model
2023-06-02 23:17:34,544:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 23:17:34,544:INFO:create_model() successfully completed......................................
2023-06-02 23:17:34,683:INFO:_master_model_container: 28
2023-06-02 23:17:34,683:INFO:_display_container: 3
2023-06-02 23:17:34,687:INFO:[ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2894, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2894, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2894, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2894, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2894, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-02 23:17:34,688:INFO:compare_models() successfully completed......................................
2023-06-03 14:49:28,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-03 14:49:28,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-03 14:49:28,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-03 14:49:28,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-03 14:49:30,608:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-03 14:49:31,147:INFO:PyCaret ClassificationExperiment
2023-06-03 14:49:31,147:INFO:Logging name: clf-default-name
2023-06-03 14:49:31,147:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-03 14:49:31,147:INFO:version 3.0.2
2023-06-03 14:49:31,147:INFO:Initializing setup()
2023-06-03 14:49:31,147:INFO:self.USI: 1d61
2023-06-03 14:49:31,147:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'pipeline', 'target_param', 'fix_imbalance', 'memory', 'is_multiclass', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'logging_param', 'y', '_available_plots', 'log_plots_param', 'seed', 'gpu_n_jobs_param', 'data', 'exp_id', 'X_train', 'USI', 'fold_groups_param', 'idx', 'html_param', 'X', 'fold_generator', 'y_test'}
2023-06-03 14:49:31,147:INFO:Checking environment
2023-06-03 14:49:31,147:INFO:python_version: 3.9.12
2023-06-03 14:49:31,147:INFO:python_build: ('main', 'Jun  1 2022 06:34:44')
2023-06-03 14:49:31,147:INFO:machine: arm64
2023-06-03 14:49:31,147:INFO:platform: macOS-13.2.1-arm64-arm-64bit
2023-06-03 14:49:31,148:INFO:Memory: svmem(total=17179869184, available=3570892800, percent=79.2, used=5783011328, free=57720832, active=3523526656, inactive=3453370368, wired=2259484672)
2023-06-03 14:49:31,148:INFO:Physical Core: 8
2023-06-03 14:49:31,148:INFO:Logical Core: 8
2023-06-03 14:49:31,148:INFO:Checking libraries
2023-06-03 14:49:31,149:INFO:System:
2023-06-03 14:49:31,149:INFO:    python: 3.9.12 (main, Jun  1 2022, 06:34:44)  [Clang 12.0.0 ]
2023-06-03 14:49:31,149:INFO:executable: /Users/pongsapak/opt/anaconda3/bin/python
2023-06-03 14:49:31,149:INFO:   machine: macOS-13.2.1-arm64-arm-64bit
2023-06-03 14:49:31,149:INFO:PyCaret required dependencies:
2023-06-03 14:49:31,149:INFO:                 pip: 23.1.2
2023-06-03 14:49:31,149:INFO:          setuptools: 61.2.0
2023-06-03 14:49:31,149:INFO:             pycaret: 3.0.2
2023-06-03 14:49:31,149:INFO:             IPython: 8.8.0
2023-06-03 14:49:31,149:INFO:          ipywidgets: 8.0.4
2023-06-03 14:49:31,149:INFO:                tqdm: 4.64.1
2023-06-03 14:49:31,149:INFO:               numpy: 1.22.4
2023-06-03 14:49:31,149:INFO:              pandas: 1.5.2
2023-06-03 14:49:31,149:INFO:              jinja2: 3.1.2
2023-06-03 14:49:31,149:INFO:               scipy: 1.9.3
2023-06-03 14:49:31,149:INFO:              joblib: 1.2.0
2023-06-03 14:49:31,149:INFO:             sklearn: 1.2.0
2023-06-03 14:49:31,149:INFO:                pyod: 1.0.9
2023-06-03 14:49:31,150:INFO:            imblearn: 0.10.1
2023-06-03 14:49:31,150:INFO:   category_encoders: 2.6.1
2023-06-03 14:49:31,150:INFO:            lightgbm: 3.2.1
2023-06-03 14:49:31,150:INFO:               numba: 0.56.4
2023-06-03 14:49:31,150:INFO:            requests: 2.28.2
2023-06-03 14:49:31,150:INFO:          matplotlib: 3.5.1
2023-06-03 14:49:31,150:INFO:          scikitplot: 0.3.7
2023-06-03 14:49:31,150:INFO:         yellowbrick: 1.5
2023-06-03 14:49:31,150:INFO:              plotly: 5.12.0
2023-06-03 14:49:31,150:INFO:             kaleido: 0.2.1
2023-06-03 14:49:31,150:INFO:         statsmodels: 0.13.5
2023-06-03 14:49:31,150:INFO:              sktime: 0.17.0
2023-06-03 14:49:31,150:INFO:               tbats: 1.1.3
2023-06-03 14:49:31,150:INFO:            pmdarima: 2.0.3
2023-06-03 14:49:31,150:INFO:              psutil: 5.9.4
2023-06-03 14:49:31,150:INFO:PyCaret optional dependencies:
2023-06-03 14:49:31,173:INFO:                shap: Not installed
2023-06-03 14:49:31,173:INFO:           interpret: Not installed
2023-06-03 14:49:31,173:INFO:                umap: Not installed
2023-06-03 14:49:31,174:INFO:    pandas_profiling: 4.0.0
2023-06-03 14:49:31,174:INFO:  explainerdashboard: Not installed
2023-06-03 14:49:31,174:INFO:             autoviz: Not installed
2023-06-03 14:49:31,174:INFO:           fairlearn: Not installed
2023-06-03 14:49:31,174:INFO:             xgboost: Not installed
2023-06-03 14:49:31,174:INFO:            catboost: Not installed
2023-06-03 14:49:31,174:INFO:              kmodes: Not installed
2023-06-03 14:49:31,174:INFO:             mlxtend: Not installed
2023-06-03 14:49:31,174:INFO:       statsforecast: Not installed
2023-06-03 14:49:31,174:INFO:        tune_sklearn: 0.4.5
2023-06-03 14:49:31,174:INFO:                 ray: 2.4.0
2023-06-03 14:49:31,174:INFO:            hyperopt: Not installed
2023-06-03 14:49:31,174:INFO:              optuna: Not installed
2023-06-03 14:49:31,174:INFO:               skopt: Not installed
2023-06-03 14:49:31,174:INFO:              mlflow: Not installed
2023-06-03 14:49:31,174:INFO:              gradio: Not installed
2023-06-03 14:49:31,174:INFO:             fastapi: Not installed
2023-06-03 14:49:31,174:INFO:             uvicorn: Not installed
2023-06-03 14:49:31,174:INFO:              m2cgen: Not installed
2023-06-03 14:49:31,174:INFO:           evidently: Not installed
2023-06-03 14:49:31,174:INFO:               fugue: Not installed
2023-06-03 14:49:31,174:INFO:           streamlit: Not installed
2023-06-03 14:49:31,174:INFO:             prophet: Not installed
2023-06-03 14:49:31,174:INFO:None
2023-06-03 14:49:31,174:INFO:Set up data.
2023-06-03 14:49:31,372:INFO:Set up train/test split.
2023-06-03 14:49:31,399:INFO:Set up index.
2023-06-03 14:49:31,400:INFO:Set up folding strategy.
2023-06-03 14:49:31,400:INFO:Assigning column types.
2023-06-03 14:49:31,415:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-03 14:49:31,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,475:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,577:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-03 14:49:31,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:49:31,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,728:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-03 14:49:31,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:31,926:INFO:Preparing preprocessing pipeline...
2023-06-03 14:49:31,929:INFO:Set up label encoding.
2023-06-03 14:49:31,929:INFO:Set up simple imputation.
2023-06-03 14:49:32,225:INFO:Finished creating preprocessing pipeline.
2023-06-03 14:49:32,236:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kg/w853qbnj03x0b8wb35_f_v540000gp/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', '...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-06-03 14:49:32,236:INFO:Creating final display dataframe.
2023-06-03 14:49:32,598:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 477  
1                                              target  
2                                          Multiclass  
3   1: 0, 10: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: ...  
4                                         (1795, 785)  
5                                         (1795, 785)  
6                                         (1436, 785)  
7                                          (359, 785)  
8                                                 784  
9                                                True  
10                                             simple  
11                                             median  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               1d61  
2023-06-03 14:49:32,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:32,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:32,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:32,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:49:32,753:INFO:setup() successfully completed in 1.63s...............
2023-06-03 14:49:32,777:INFO:Initializing compare_models()
2023-06-03 14:49:32,777:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-03 14:49:32,778:INFO:Checking exceptions
2023-06-03 14:49:32,789:INFO:Preparing display monitor
2023-06-03 14:49:32,818:INFO:Initializing Logistic Regression
2023-06-03 14:49:32,818:INFO:Total runtime is 4.001458485921224e-06 minutes
2023-06-03 14:49:32,821:INFO:SubProcess create_model() called ==================================
2023-06-03 14:49:32,822:INFO:Initializing create_model()
2023-06-03 14:49:32,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:49:32,822:INFO:Checking exceptions
2023-06-03 14:49:32,823:INFO:Importing libraries
2023-06-03 14:49:32,823:INFO:Copying training dataset
2023-06-03 14:49:32,847:INFO:Defining folds
2023-06-03 14:49:32,847:INFO:Declaring metric variables
2023-06-03 14:49:32,852:INFO:Importing untrained model
2023-06-03 14:49:32,856:INFO:Logistic Regression Imported successfully
2023-06-03 14:49:32,866:INFO:Starting cross validation
2023-06-03 14:49:32,871:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:49:54,429:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-03 14:49:54,432:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-03 14:49:54,521:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,527:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,531:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,531:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-03 14:49:54,781:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,784:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,788:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,933:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,936:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,937:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,939:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,941:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:54,942:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:55,025:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:55,028:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:55,031:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:55,148:INFO:Calculating mean and std
2023-06-03 14:49:55,154:INFO:Creating metrics dataframe
2023-06-03 14:49:55,191:INFO:Uploading results into container
2023-06-03 14:49:55,193:INFO:Uploading model into container now
2023-06-03 14:49:55,194:INFO:_master_model_container: 1
2023-06-03 14:49:55,194:INFO:_display_container: 2
2023-06-03 14:49:55,195:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=477, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-03 14:49:55,195:INFO:create_model() successfully completed......................................
2023-06-03 14:49:55,668:INFO:SubProcess create_model() end ==================================
2023-06-03 14:49:55,669:INFO:Creating metrics dataframe
2023-06-03 14:49:55,690:INFO:Initializing K Neighbors Classifier
2023-06-03 14:49:55,691:INFO:Total runtime is 0.38122056722640996 minutes
2023-06-03 14:49:55,695:INFO:SubProcess create_model() called ==================================
2023-06-03 14:49:55,695:INFO:Initializing create_model()
2023-06-03 14:49:55,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:49:55,696:INFO:Checking exceptions
2023-06-03 14:49:55,696:INFO:Importing libraries
2023-06-03 14:49:55,696:INFO:Copying training dataset
2023-06-03 14:49:55,730:INFO:Defining folds
2023-06-03 14:49:55,730:INFO:Declaring metric variables
2023-06-03 14:49:55,739:INFO:Importing untrained model
2023-06-03 14:49:55,747:INFO:K Neighbors Classifier Imported successfully
2023-06-03 14:49:55,757:INFO:Starting cross validation
2023-06-03 14:49:55,763:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:49:56,639:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:56,643:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:56,647:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:56,791:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:56,794:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:49:56,798:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,090:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,090:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,090:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,094:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,094:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,094:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,097:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,097:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,097:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:00,160:INFO:Calculating mean and std
2023-06-03 14:50:00,174:INFO:Creating metrics dataframe
2023-06-03 14:50:00,229:INFO:Uploading results into container
2023-06-03 14:50:00,230:INFO:Uploading model into container now
2023-06-03 14:50:00,231:INFO:_master_model_container: 2
2023-06-03 14:50:00,231:INFO:_display_container: 2
2023-06-03 14:50:00,232:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-03 14:50:00,232:INFO:create_model() successfully completed......................................
2023-06-03 14:50:00,492:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:00,492:INFO:Creating metrics dataframe
2023-06-03 14:50:00,502:INFO:Initializing Naive Bayes
2023-06-03 14:50:00,502:INFO:Total runtime is 0.4614033500353496 minutes
2023-06-03 14:50:00,505:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:00,505:INFO:Initializing create_model()
2023-06-03 14:50:00,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:00,505:INFO:Checking exceptions
2023-06-03 14:50:00,505:INFO:Importing libraries
2023-06-03 14:50:00,505:INFO:Copying training dataset
2023-06-03 14:50:00,523:INFO:Defining folds
2023-06-03 14:50:00,523:INFO:Declaring metric variables
2023-06-03 14:50:00,527:INFO:Importing untrained model
2023-06-03 14:50:00,531:INFO:Naive Bayes Imported successfully
2023-06-03 14:50:00,538:INFO:Starting cross validation
2023-06-03 14:50:00,543:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:01,091:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,094:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,098:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,099:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,103:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,109:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,143:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,147:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,149:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,150:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,153:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,155:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,162:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,165:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,169:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:01,312:INFO:Calculating mean and std
2023-06-03 14:50:01,313:INFO:Creating metrics dataframe
2023-06-03 14:50:01,328:INFO:Uploading results into container
2023-06-03 14:50:01,329:INFO:Uploading model into container now
2023-06-03 14:50:01,329:INFO:_master_model_container: 3
2023-06-03 14:50:01,329:INFO:_display_container: 2
2023-06-03 14:50:01,329:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-03 14:50:01,329:INFO:create_model() successfully completed......................................
2023-06-03 14:50:01,489:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:01,489:INFO:Creating metrics dataframe
2023-06-03 14:50:01,498:INFO:Initializing Decision Tree Classifier
2023-06-03 14:50:01,498:INFO:Total runtime is 0.47800264755884814 minutes
2023-06-03 14:50:01,501:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:01,502:INFO:Initializing create_model()
2023-06-03 14:50:01,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:01,502:INFO:Checking exceptions
2023-06-03 14:50:01,502:INFO:Importing libraries
2023-06-03 14:50:01,502:INFO:Copying training dataset
2023-06-03 14:50:01,518:INFO:Defining folds
2023-06-03 14:50:01,518:INFO:Declaring metric variables
2023-06-03 14:50:01,523:INFO:Importing untrained model
2023-06-03 14:50:01,526:INFO:Decision Tree Classifier Imported successfully
2023-06-03 14:50:01,532:INFO:Starting cross validation
2023-06-03 14:50:01,537:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:02,360:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,363:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,366:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,404:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,407:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,409:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,413:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,416:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,419:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,420:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,423:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,426:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,460:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,463:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,466:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:02,487:INFO:Calculating mean and std
2023-06-03 14:50:02,492:INFO:Creating metrics dataframe
2023-06-03 14:50:02,530:INFO:Uploading results into container
2023-06-03 14:50:02,531:INFO:Uploading model into container now
2023-06-03 14:50:02,532:INFO:_master_model_container: 4
2023-06-03 14:50:02,532:INFO:_display_container: 2
2023-06-03 14:50:02,532:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=477, splitter='best')
2023-06-03 14:50:02,532:INFO:create_model() successfully completed......................................
2023-06-03 14:50:02,708:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:02,708:INFO:Creating metrics dataframe
2023-06-03 14:50:02,717:INFO:Initializing SVM - Linear Kernel
2023-06-03 14:50:02,717:INFO:Total runtime is 0.4983215014139812 minutes
2023-06-03 14:50:02,720:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:02,720:INFO:Initializing create_model()
2023-06-03 14:50:02,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:02,721:INFO:Checking exceptions
2023-06-03 14:50:02,721:INFO:Importing libraries
2023-06-03 14:50:02,721:INFO:Copying training dataset
2023-06-03 14:50:02,733:INFO:Defining folds
2023-06-03 14:50:02,733:INFO:Declaring metric variables
2023-06-03 14:50:02,737:INFO:Importing untrained model
2023-06-03 14:50:02,741:INFO:SVM - Linear Kernel Imported successfully
2023-06-03 14:50:02,747:INFO:Starting cross validation
2023-06-03 14:50:02,754:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:04,482:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-03 14:50:04,482:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-03 14:50:04,484:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,484:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,487:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,488:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,491:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,493:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,506:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-03 14:50:04,509:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,521:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,533:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,701:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-03 14:50:04,702:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,705:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,706:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,718:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-03 14:50:04,719:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,721:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,723:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:04,832:INFO:Calculating mean and std
2023-06-03 14:50:04,833:INFO:Creating metrics dataframe
2023-06-03 14:50:04,848:INFO:Uploading results into container
2023-06-03 14:50:04,848:INFO:Uploading model into container now
2023-06-03 14:50:04,849:INFO:_master_model_container: 5
2023-06-03 14:50:04,849:INFO:_display_container: 2
2023-06-03 14:50:04,849:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=477, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-03 14:50:04,849:INFO:create_model() successfully completed......................................
2023-06-03 14:50:05,040:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:05,040:INFO:Creating metrics dataframe
2023-06-03 14:50:05,048:INFO:Initializing Ridge Classifier
2023-06-03 14:50:05,048:INFO:Total runtime is 0.537182633082072 minutes
2023-06-03 14:50:05,051:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:05,052:INFO:Initializing create_model()
2023-06-03 14:50:05,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:05,052:INFO:Checking exceptions
2023-06-03 14:50:05,052:INFO:Importing libraries
2023-06-03 14:50:05,052:INFO:Copying training dataset
2023-06-03 14:50:05,081:INFO:Defining folds
2023-06-03 14:50:05,082:INFO:Declaring metric variables
2023-06-03 14:50:05,085:INFO:Importing untrained model
2023-06-03 14:50:05,088:INFO:Ridge Classifier Imported successfully
2023-06-03 14:50:05,100:INFO:Starting cross validation
2023-06-03 14:50:05,104:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:06,627:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-03 14:50:06,628:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,630:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-03 14:50:06,631:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,633:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,634:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,637:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,642:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,652:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-03 14:50:06,653:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,658:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,662:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,690:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-03 14:50:06,692:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,695:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,697:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,758:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-03 14:50:06,760:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,762:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,764:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:06,770:INFO:Calculating mean and std
2023-06-03 14:50:06,772:INFO:Creating metrics dataframe
2023-06-03 14:50:06,805:INFO:Uploading results into container
2023-06-03 14:50:06,806:INFO:Uploading model into container now
2023-06-03 14:50:06,807:INFO:_master_model_container: 6
2023-06-03 14:50:06,807:INFO:_display_container: 2
2023-06-03 14:50:06,808:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=477, solver='auto',
                tol=0.0001)
2023-06-03 14:50:06,808:INFO:create_model() successfully completed......................................
2023-06-03 14:50:07,001:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:07,001:INFO:Creating metrics dataframe
2023-06-03 14:50:07,009:INFO:Initializing Random Forest Classifier
2023-06-03 14:50:07,009:INFO:Total runtime is 0.5698615312576295 minutes
2023-06-03 14:50:07,012:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:07,012:INFO:Initializing create_model()
2023-06-03 14:50:07,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:07,012:INFO:Checking exceptions
2023-06-03 14:50:07,012:INFO:Importing libraries
2023-06-03 14:50:07,012:INFO:Copying training dataset
2023-06-03 14:50:07,026:INFO:Defining folds
2023-06-03 14:50:07,026:INFO:Declaring metric variables
2023-06-03 14:50:07,028:INFO:Importing untrained model
2023-06-03 14:50:07,030:INFO:Random Forest Classifier Imported successfully
2023-06-03 14:50:07,035:INFO:Starting cross validation
2023-06-03 14:50:07,038:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:08,980:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:08,984:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:08,987:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,007:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,010:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,011:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,013:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,018:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,022:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,228:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,230:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,232:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,240:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,242:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,244:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:09,360:INFO:Calculating mean and std
2023-06-03 14:50:09,361:INFO:Creating metrics dataframe
2023-06-03 14:50:09,378:INFO:Uploading results into container
2023-06-03 14:50:09,379:INFO:Uploading model into container now
2023-06-03 14:50:09,379:INFO:_master_model_container: 7
2023-06-03 14:50:09,379:INFO:_display_container: 2
2023-06-03 14:50:09,380:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=477, verbose=0, warm_start=False)
2023-06-03 14:50:09,380:INFO:create_model() successfully completed......................................
2023-06-03 14:50:09,550:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:09,551:INFO:Creating metrics dataframe
2023-06-03 14:50:09,558:INFO:Initializing Quadratic Discriminant Analysis
2023-06-03 14:50:09,558:INFO:Total runtime is 0.6123467326164247 minutes
2023-06-03 14:50:09,560:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:09,561:INFO:Initializing create_model()
2023-06-03 14:50:09,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:09,561:INFO:Checking exceptions
2023-06-03 14:50:09,561:INFO:Importing libraries
2023-06-03 14:50:09,561:INFO:Copying training dataset
2023-06-03 14:50:09,573:INFO:Defining folds
2023-06-03 14:50:09,573:INFO:Declaring metric variables
2023-06-03 14:50:09,576:INFO:Importing untrained model
2023-06-03 14:50:09,578:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-03 14:50:09,582:INFO:Starting cross validation
2023-06-03 14:50:09,585:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:09,930:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-03 14:50:09,936:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-03 14:50:09,945:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-03 14:50:09,945:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-03 14:50:10,318:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-03 14:50:10,839:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,840:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,843:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,843:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,844:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,845:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:50:10,846:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,847:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,847:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,849:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:50:10,851:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,883:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,886:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:10,889:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:11,024:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:11,026:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:11,028:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:50:11,029:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:11,035:INFO:Calculating mean and std
2023-06-03 14:50:11,037:INFO:Creating metrics dataframe
2023-06-03 14:50:11,077:INFO:Uploading results into container
2023-06-03 14:50:11,078:INFO:Uploading model into container now
2023-06-03 14:50:11,078:INFO:_master_model_container: 8
2023-06-03 14:50:11,078:INFO:_display_container: 2
2023-06-03 14:50:11,079:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-03 14:50:11,079:INFO:create_model() successfully completed......................................
2023-06-03 14:50:11,349:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:11,349:INFO:Creating metrics dataframe
2023-06-03 14:50:11,358:INFO:Initializing Ada Boost Classifier
2023-06-03 14:50:11,359:INFO:Total runtime is 0.6423522671063743 minutes
2023-06-03 14:50:11,362:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:11,363:INFO:Initializing create_model()
2023-06-03 14:50:11,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:11,363:INFO:Checking exceptions
2023-06-03 14:50:11,363:INFO:Importing libraries
2023-06-03 14:50:11,363:INFO:Copying training dataset
2023-06-03 14:50:11,390:INFO:Defining folds
2023-06-03 14:50:11,390:INFO:Declaring metric variables
2023-06-03 14:50:11,395:INFO:Importing untrained model
2023-06-03 14:50:11,400:INFO:Ada Boost Classifier Imported successfully
2023-06-03 14:50:11,409:INFO:Starting cross validation
2023-06-03 14:50:11,418:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:13,625:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,633:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,637:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,647:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,652:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,659:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,914:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,919:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,924:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,941:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,946:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,952:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,980:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,984:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:13,988:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:14,123:INFO:Calculating mean and std
2023-06-03 14:50:14,130:INFO:Creating metrics dataframe
2023-06-03 14:50:14,173:INFO:Uploading results into container
2023-06-03 14:50:14,174:INFO:Uploading model into container now
2023-06-03 14:50:14,175:INFO:_master_model_container: 9
2023-06-03 14:50:14,176:INFO:_display_container: 2
2023-06-03 14:50:14,177:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=477)
2023-06-03 14:50:14,177:INFO:create_model() successfully completed......................................
2023-06-03 14:50:14,569:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:14,569:INFO:Creating metrics dataframe
2023-06-03 14:50:14,586:INFO:Initializing Gradient Boosting Classifier
2023-06-03 14:50:14,586:INFO:Total runtime is 0.6961404323577882 minutes
2023-06-03 14:50:14,591:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:14,591:INFO:Initializing create_model()
2023-06-03 14:50:14,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:14,592:INFO:Checking exceptions
2023-06-03 14:50:14,592:INFO:Importing libraries
2023-06-03 14:50:14,592:INFO:Copying training dataset
2023-06-03 14:50:14,619:INFO:Defining folds
2023-06-03 14:50:14,620:INFO:Declaring metric variables
2023-06-03 14:50:14,630:INFO:Importing untrained model
2023-06-03 14:50:14,638:INFO:Gradient Boosting Classifier Imported successfully
2023-06-03 14:50:14,658:INFO:Starting cross validation
2023-06-03 14:50:14,666:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:50:55,289:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-03 14:50:55,300:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-03 14:50:55,599:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-03 14:50:56,176:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.34s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-03 14:50:56,374:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.40s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-03 14:50:57,501:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,505:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,509:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,542:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,547:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,550:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,555:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,560:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,564:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,867:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,869:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,871:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,962:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,965:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:57,967:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:50:58,076:INFO:Calculating mean and std
2023-06-03 14:50:58,081:INFO:Creating metrics dataframe
2023-06-03 14:50:58,105:INFO:Uploading results into container
2023-06-03 14:50:58,106:INFO:Uploading model into container now
2023-06-03 14:50:58,107:INFO:_master_model_container: 10
2023-06-03 14:50:58,107:INFO:_display_container: 2
2023-06-03 14:50:58,108:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=477, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-03 14:50:58,108:INFO:create_model() successfully completed......................................
2023-06-03 14:50:58,405:INFO:SubProcess create_model() end ==================================
2023-06-03 14:50:58,405:INFO:Creating metrics dataframe
2023-06-03 14:50:58,414:INFO:Initializing Linear Discriminant Analysis
2023-06-03 14:50:58,414:INFO:Total runtime is 1.4266064167022705 minutes
2023-06-03 14:50:58,416:INFO:SubProcess create_model() called ==================================
2023-06-03 14:50:58,416:INFO:Initializing create_model()
2023-06-03 14:50:58,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:50:58,417:INFO:Checking exceptions
2023-06-03 14:50:58,417:INFO:Importing libraries
2023-06-03 14:50:58,417:INFO:Copying training dataset
2023-06-03 14:50:58,430:INFO:Defining folds
2023-06-03 14:50:58,430:INFO:Declaring metric variables
2023-06-03 14:50:58,433:INFO:Importing untrained model
2023-06-03 14:50:58,435:INFO:Linear Discriminant Analysis Imported successfully
2023-06-03 14:50:58,439:INFO:Starting cross validation
2023-06-03 14:50:58,442:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:51:02,079:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,084:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,088:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,242:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,246:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,249:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,267:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,271:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,274:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,288:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,292:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,296:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,397:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,400:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,403:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:02,515:INFO:Calculating mean and std
2023-06-03 14:51:02,518:INFO:Creating metrics dataframe
2023-06-03 14:51:02,556:INFO:Uploading results into container
2023-06-03 14:51:02,557:INFO:Uploading model into container now
2023-06-03 14:51:02,558:INFO:_master_model_container: 11
2023-06-03 14:51:02,558:INFO:_display_container: 2
2023-06-03 14:51:02,559:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-03 14:51:02,559:INFO:create_model() successfully completed......................................
2023-06-03 14:51:02,970:INFO:SubProcess create_model() end ==================================
2023-06-03 14:51:02,970:INFO:Creating metrics dataframe
2023-06-03 14:51:02,994:INFO:Initializing Extra Trees Classifier
2023-06-03 14:51:02,994:INFO:Total runtime is 1.5029491305351257 minutes
2023-06-03 14:51:02,999:INFO:SubProcess create_model() called ==================================
2023-06-03 14:51:02,999:INFO:Initializing create_model()
2023-06-03 14:51:02,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:02,999:INFO:Checking exceptions
2023-06-03 14:51:03,000:INFO:Importing libraries
2023-06-03 14:51:03,000:INFO:Copying training dataset
2023-06-03 14:51:03,026:INFO:Defining folds
2023-06-03 14:51:03,027:INFO:Declaring metric variables
2023-06-03 14:51:03,033:INFO:Importing untrained model
2023-06-03 14:51:03,046:INFO:Extra Trees Classifier Imported successfully
2023-06-03 14:51:03,060:INFO:Starting cross validation
2023-06-03 14:51:03,067:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:51:06,125:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,130:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,134:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,147:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,152:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,155:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,590:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,592:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,592:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,594:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,596:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,596:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,597:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,600:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,600:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:06,798:INFO:Calculating mean and std
2023-06-03 14:51:06,810:INFO:Creating metrics dataframe
2023-06-03 14:51:06,841:INFO:Uploading results into container
2023-06-03 14:51:06,842:INFO:Uploading model into container now
2023-06-03 14:51:06,843:INFO:_master_model_container: 12
2023-06-03 14:51:06,843:INFO:_display_container: 2
2023-06-03 14:51:06,843:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=477, verbose=0, warm_start=False)
2023-06-03 14:51:06,843:INFO:create_model() successfully completed......................................
2023-06-03 14:51:07,219:INFO:SubProcess create_model() end ==================================
2023-06-03 14:51:07,219:INFO:Creating metrics dataframe
2023-06-03 14:51:07,232:INFO:Initializing Light Gradient Boosting Machine
2023-06-03 14:51:07,233:INFO:Total runtime is 1.57358504931132 minutes
2023-06-03 14:51:07,236:INFO:SubProcess create_model() called ==================================
2023-06-03 14:51:07,236:INFO:Initializing create_model()
2023-06-03 14:51:07,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:07,236:INFO:Checking exceptions
2023-06-03 14:51:07,236:INFO:Importing libraries
2023-06-03 14:51:07,236:INFO:Copying training dataset
2023-06-03 14:51:07,265:INFO:Defining folds
2023-06-03 14:51:07,266:INFO:Declaring metric variables
2023-06-03 14:51:07,271:INFO:Importing untrained model
2023-06-03 14:51:07,282:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-03 14:51:07,290:INFO:Starting cross validation
2023-06-03 14:51:07,296:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:51:16,215:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,219:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,222:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,270:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,274:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,277:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,329:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,332:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,335:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,343:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,346:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,349:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,403:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,406:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,409:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:16,525:INFO:Calculating mean and std
2023-06-03 14:51:16,528:INFO:Creating metrics dataframe
2023-06-03 14:51:16,554:INFO:Uploading results into container
2023-06-03 14:51:16,555:INFO:Uploading model into container now
2023-06-03 14:51:16,556:INFO:_master_model_container: 13
2023-06-03 14:51:16,556:INFO:_display_container: 2
2023-06-03 14:51:16,556:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=477, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-03 14:51:16,556:INFO:create_model() successfully completed......................................
2023-06-03 14:51:16,825:INFO:SubProcess create_model() end ==================================
2023-06-03 14:51:16,825:INFO:Creating metrics dataframe
2023-06-03 14:51:16,834:INFO:Initializing Dummy Classifier
2023-06-03 14:51:16,835:INFO:Total runtime is 1.7336166501045227 minutes
2023-06-03 14:51:16,837:INFO:SubProcess create_model() called ==================================
2023-06-03 14:51:16,837:INFO:Initializing create_model()
2023-06-03 14:51:16,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32efa0070>, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:16,837:INFO:Checking exceptions
2023-06-03 14:51:16,837:INFO:Importing libraries
2023-06-03 14:51:16,837:INFO:Copying training dataset
2023-06-03 14:51:16,851:INFO:Defining folds
2023-06-03 14:51:16,851:INFO:Declaring metric variables
2023-06-03 14:51:16,854:INFO:Importing untrained model
2023-06-03 14:51:16,857:INFO:Dummy Classifier Imported successfully
2023-06-03 14:51:16,861:INFO:Starting cross validation
2023-06-03 14:51:16,865:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-03 14:51:17,092:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,094:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,095:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:51:17,096:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,101:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,104:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,105:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:51:17,106:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,115:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,118:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,119:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,120:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,121:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:51:17,122:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,122:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:51:17,124:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,130:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,133:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,135:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-03 14:51:17,136:WARNING:/Users/pongsapak/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-03 14:51:17,338:INFO:Calculating mean and std
2023-06-03 14:51:17,339:INFO:Creating metrics dataframe
2023-06-03 14:51:17,361:INFO:Uploading results into container
2023-06-03 14:51:17,362:INFO:Uploading model into container now
2023-06-03 14:51:17,362:INFO:_master_model_container: 14
2023-06-03 14:51:17,362:INFO:_display_container: 2
2023-06-03 14:51:17,362:INFO:DummyClassifier(constant=None, random_state=477, strategy='prior')
2023-06-03 14:51:17,362:INFO:create_model() successfully completed......................................
2023-06-03 14:51:17,507:INFO:SubProcess create_model() end ==================================
2023-06-03 14:51:17,507:INFO:Creating metrics dataframe
2023-06-03 14:51:17,522:INFO:Initializing create_model()
2023-06-03 14:51:17,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=477, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:17,522:INFO:Checking exceptions
2023-06-03 14:51:17,524:INFO:Importing libraries
2023-06-03 14:51:17,524:INFO:Copying training dataset
2023-06-03 14:51:17,537:INFO:Defining folds
2023-06-03 14:51:17,537:INFO:Declaring metric variables
2023-06-03 14:51:17,537:INFO:Importing untrained model
2023-06-03 14:51:17,537:INFO:Declaring custom model
2023-06-03 14:51:17,538:INFO:Extra Trees Classifier Imported successfully
2023-06-03 14:51:17,540:INFO:Cross validation set to False
2023-06-03 14:51:17,540:INFO:Fitting Model
2023-06-03 14:51:18,039:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=477, verbose=0, warm_start=False)
2023-06-03 14:51:18,039:INFO:create_model() successfully completed......................................
2023-06-03 14:51:18,186:INFO:Initializing create_model()
2023-06-03 14:51:18,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=477, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:18,186:INFO:Checking exceptions
2023-06-03 14:51:18,187:INFO:Importing libraries
2023-06-03 14:51:18,188:INFO:Copying training dataset
2023-06-03 14:51:18,201:INFO:Defining folds
2023-06-03 14:51:18,202:INFO:Declaring metric variables
2023-06-03 14:51:18,202:INFO:Importing untrained model
2023-06-03 14:51:18,202:INFO:Declaring custom model
2023-06-03 14:51:18,203:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-03 14:51:18,206:INFO:Cross validation set to False
2023-06-03 14:51:18,206:INFO:Fitting Model
2023-06-03 14:51:36,720:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=477, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-03 14:51:36,720:INFO:create_model() successfully completed......................................
2023-06-03 14:51:37,004:INFO:Initializing create_model()
2023-06-03 14:51:37,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=477, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:37,005:INFO:Checking exceptions
2023-06-03 14:51:37,006:INFO:Importing libraries
2023-06-03 14:51:37,006:INFO:Copying training dataset
2023-06-03 14:51:37,023:INFO:Defining folds
2023-06-03 14:51:37,023:INFO:Declaring metric variables
2023-06-03 14:51:37,024:INFO:Importing untrained model
2023-06-03 14:51:37,024:INFO:Declaring custom model
2023-06-03 14:51:37,025:INFO:Random Forest Classifier Imported successfully
2023-06-03 14:51:37,028:INFO:Cross validation set to False
2023-06-03 14:51:37,028:INFO:Fitting Model
2023-06-03 14:51:37,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=477, verbose=0, warm_start=False)
2023-06-03 14:51:37,551:INFO:create_model() successfully completed......................................
2023-06-03 14:51:37,701:INFO:Initializing create_model()
2023-06-03 14:51:37,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3319213a0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=477, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-03 14:51:37,702:INFO:Checking exceptions
2023-06-03 14:51:37,703:INFO:Importing libraries
2023-06-03 14:51:37,703:INFO:Copying training dataset
2023-06-03 14:51:37,715:INFO:Defining folds
2023-06-03 14:51:37,716:INFO:Declaring metric variables
2023-06-03 14:51:37,716:INFO:Importing untrained model
2023-06-03 14:51:37,716:INFO:Declaring custom model
2023-06-03 14:51:37,716:INFO:Gradient Boosting Classifier Imported successfully
2023-06-03 14:51:37,719:INFO:Cross validation set to False
2023-06-03 14:51:37,719:INFO:Fitting Model
2023-06-03 14:52:39,631:INFO:PyCaret ClassificationExperiment
2023-06-03 14:52:39,631:INFO:Logging name: clf-default-name
2023-06-03 14:52:39,631:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-03 14:52:39,631:INFO:version 3.0.2
2023-06-03 14:52:39,631:INFO:Initializing setup()
2023-06-03 14:52:39,631:INFO:self.USI: 8147
2023-06-03 14:52:39,631:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'pipeline', 'target_param', 'fix_imbalance', 'memory', 'is_multiclass', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'logging_param', 'y', '_available_plots', 'log_plots_param', 'seed', 'gpu_n_jobs_param', 'data', 'exp_id', 'X_train', 'USI', 'fold_groups_param', 'idx', 'html_param', 'X', 'fold_generator', 'y_test'}
2023-06-03 14:52:39,631:INFO:Checking environment
2023-06-03 14:52:39,632:INFO:python_version: 3.9.12
2023-06-03 14:52:39,632:INFO:python_build: ('main', 'Jun  1 2022 06:34:44')
2023-06-03 14:52:39,632:INFO:machine: arm64
2023-06-03 14:52:39,632:INFO:platform: macOS-13.2.1-arm64-arm-64bit
2023-06-03 14:52:39,632:INFO:Memory: svmem(total=17179869184, available=3104784384, percent=81.9, used=5503647744, free=64585728, active=3053846528, inactive=3033202688, wired=2449801216)
2023-06-03 14:52:39,632:INFO:Physical Core: 8
2023-06-03 14:52:39,632:INFO:Logical Core: 8
2023-06-03 14:52:39,632:INFO:Checking libraries
2023-06-03 14:52:39,632:INFO:System:
2023-06-03 14:52:39,632:INFO:    python: 3.9.12 (main, Jun  1 2022, 06:34:44)  [Clang 12.0.0 ]
2023-06-03 14:52:39,632:INFO:executable: /Users/pongsapak/opt/anaconda3/bin/python
2023-06-03 14:52:39,632:INFO:   machine: macOS-13.2.1-arm64-arm-64bit
2023-06-03 14:52:39,632:INFO:PyCaret required dependencies:
2023-06-03 14:52:39,633:INFO:                 pip: 23.1.2
2023-06-03 14:52:39,633:INFO:          setuptools: 61.2.0
2023-06-03 14:52:39,633:INFO:             pycaret: 3.0.2
2023-06-03 14:52:39,633:INFO:             IPython: 8.8.0
2023-06-03 14:52:39,633:INFO:          ipywidgets: 8.0.4
2023-06-03 14:52:39,633:INFO:                tqdm: 4.64.1
2023-06-03 14:52:39,633:INFO:               numpy: 1.22.4
2023-06-03 14:52:39,633:INFO:              pandas: 1.5.2
2023-06-03 14:52:39,633:INFO:              jinja2: 3.1.2
2023-06-03 14:52:39,633:INFO:               scipy: 1.9.3
2023-06-03 14:52:39,633:INFO:              joblib: 1.2.0
2023-06-03 14:52:39,633:INFO:             sklearn: 1.2.0
2023-06-03 14:52:39,633:INFO:                pyod: 1.0.9
2023-06-03 14:52:39,633:INFO:            imblearn: 0.10.1
2023-06-03 14:52:39,633:INFO:   category_encoders: 2.6.1
2023-06-03 14:52:39,633:INFO:            lightgbm: 3.2.1
2023-06-03 14:52:39,633:INFO:               numba: 0.56.4
2023-06-03 14:52:39,633:INFO:            requests: 2.28.2
2023-06-03 14:52:39,633:INFO:          matplotlib: 3.5.1
2023-06-03 14:52:39,633:INFO:          scikitplot: 0.3.7
2023-06-03 14:52:39,633:INFO:         yellowbrick: 1.5
2023-06-03 14:52:39,633:INFO:              plotly: 5.12.0
2023-06-03 14:52:39,633:INFO:             kaleido: 0.2.1
2023-06-03 14:52:39,633:INFO:         statsmodels: 0.13.5
2023-06-03 14:52:39,633:INFO:              sktime: 0.17.0
2023-06-03 14:52:39,633:INFO:               tbats: 1.1.3
2023-06-03 14:52:39,633:INFO:            pmdarima: 2.0.3
2023-06-03 14:52:39,633:INFO:              psutil: 5.9.4
2023-06-03 14:52:39,633:INFO:PyCaret optional dependencies:
2023-06-03 14:52:39,634:INFO:                shap: Not installed
2023-06-03 14:52:39,634:INFO:           interpret: Not installed
2023-06-03 14:52:39,634:INFO:                umap: Not installed
2023-06-03 14:52:39,634:INFO:    pandas_profiling: 4.0.0
2023-06-03 14:52:39,634:INFO:  explainerdashboard: Not installed
2023-06-03 14:52:39,634:INFO:             autoviz: Not installed
2023-06-03 14:52:39,634:INFO:           fairlearn: Not installed
2023-06-03 14:52:39,634:INFO:             xgboost: Not installed
2023-06-03 14:52:39,634:INFO:            catboost: Not installed
2023-06-03 14:52:39,634:INFO:              kmodes: Not installed
2023-06-03 14:52:39,634:INFO:             mlxtend: Not installed
2023-06-03 14:52:39,634:INFO:       statsforecast: Not installed
2023-06-03 14:52:39,634:INFO:        tune_sklearn: 0.4.5
2023-06-03 14:52:39,634:INFO:                 ray: 2.4.0
2023-06-03 14:52:39,634:INFO:            hyperopt: Not installed
2023-06-03 14:52:39,634:INFO:              optuna: Not installed
2023-06-03 14:52:39,634:INFO:               skopt: Not installed
2023-06-03 14:52:39,634:INFO:              mlflow: Not installed
2023-06-03 14:52:39,634:INFO:              gradio: Not installed
2023-06-03 14:52:39,634:INFO:             fastapi: Not installed
2023-06-03 14:52:39,634:INFO:             uvicorn: Not installed
2023-06-03 14:52:39,634:INFO:              m2cgen: Not installed
2023-06-03 14:52:39,634:INFO:           evidently: Not installed
2023-06-03 14:52:39,634:INFO:               fugue: Not installed
2023-06-03 14:52:39,634:INFO:           streamlit: Not installed
2023-06-03 14:52:39,634:INFO:             prophet: Not installed
2023-06-03 14:52:39,634:INFO:None
2023-06-03 14:52:39,635:INFO:Set up data.
2023-06-03 14:52:39,732:INFO:Set up train/test split.
2023-06-03 14:52:39,745:INFO:Set up index.
2023-06-03 14:52:39,745:INFO:Set up folding strategy.
2023-06-03 14:52:39,745:INFO:Assigning column types.
2023-06-03 14:52:39,752:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-03 14:52:39,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-03 14:52:39,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:52:39,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:39,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:39,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-03 14:52:39,968:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:52:40,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,006:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-03 14:52:40,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:52:40,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-03 14:52:40,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,151:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-03 14:52:40,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,275:INFO:Preparing preprocessing pipeline...
2023-06-03 14:52:40,276:INFO:Set up label encoding.
2023-06-03 14:52:40,277:INFO:Set up simple imputation.
2023-06-03 14:52:40,309:INFO:Finished creating preprocessing pipeline.
2023-06-03 14:52:40,313:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kg/w853qbnj03x0b8wb35_f_v540000gp/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', '...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-06-03 14:52:40,313:INFO:Creating final display dataframe.
2023-06-03 14:52:40,472:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                7850  
1                                              target  
2                                          Multiclass  
3   1: 0, 10: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: ...  
4                                         (1795, 166)  
5                                         (1795, 166)  
6                                         (1256, 166)  
7                                          (539, 166)  
8                                                 165  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               8147  
2023-06-03 14:52:40,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-03 14:52:40,956:INFO:setup() successfully completed in 1.39s...............
